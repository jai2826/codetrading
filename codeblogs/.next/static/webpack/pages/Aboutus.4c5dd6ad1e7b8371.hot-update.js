/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/Aboutus",{

/***/ "./node_modules/next/dist/build/polyfills/process.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/process.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar ref, ref1;\nmodule.exports = ((ref = __webpack_require__.g.process) === null || ref === void 0 ? void 0 : ref.env) && typeof ((ref1 = __webpack_require__.g.process) === null || ref1 === void 0 ? void 0 : ref1.env) === 'object' ? __webpack_require__.g.process : __webpack_require__(/*! ../../compiled/process */ \"./node_modules/next/dist/compiled/process/browser.js\");\n\n//# sourceMappingURL=process.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9wcm9jZXNzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSx5QkFBeUIscUJBQU0sNEVBQTRFLHFCQUFNLDBFQUEwRSxxQkFBTSxXQUFXLG1CQUFPLENBQUMsb0ZBQXdCOztBQUU1TyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9wcm9jZXNzLmpzP2NhNjUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgcmVmLCByZWYxO1xubW9kdWxlLmV4cG9ydHMgPSAoKHJlZiA9IGdsb2JhbC5wcm9jZXNzKSA9PT0gbnVsbCB8fCByZWYgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHJlZi5lbnYpICYmIHR5cGVvZiAoKHJlZjEgPSBnbG9iYWwucHJvY2VzcykgPT09IG51bGwgfHwgcmVmMSA9PT0gdm9pZCAwID8gdm9pZCAwIDogcmVmMS5lbnYpID09PSAnb2JqZWN0JyA/IGdsb2JhbC5wcm9jZXNzIDogcmVxdWlyZSgnLi4vLi4vY29tcGlsZWQvcHJvY2VzcycpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcm9jZXNzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/polyfills/process.js\n");

/***/ }),

/***/ "./node_modules/next/dist/shared/lib/constants.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/constants.js ***!
  \********************************************************/
/***/ (function(module, exports) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.TRACE_OUTPUT_VERSION = exports.STATIC_STATUS_PAGES = exports.OPTIMIZED_FONT_PROVIDERS = exports.GOOGLE_FONT_PROVIDER = exports.FLIGHT_PROPS_ID = exports.SERVER_PROPS_ID = exports.STATIC_PROPS_ID = exports.PERMANENT_REDIRECT_STATUS = exports.TEMPORARY_REDIRECT_STATUS = exports.MIDDLEWARE_RUNTIME_WEBPACK = exports.MIDDLEWARE_SSR_RUNTIME_WEBPACK = exports.CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL = exports.CLIENT_STATIC_FILES_RUNTIME_WEBPACK = exports.CLIENT_STATIC_FILES_RUNTIME_AMP = exports.CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH = exports.CLIENT_STATIC_FILES_RUNTIME_MAIN = exports.MIDDLEWARE_REACT_LOADABLE_MANIFEST = exports.MIDDLEWARE_BUILD_MANIFEST = exports.MIDDLEWARE_FLIGHT_MANIFEST = exports.STRING_LITERAL_DROP_BUNDLE = exports.CLIENT_STATIC_FILES_RUNTIME = exports.CLIENT_STATIC_FILES_PATH = exports.CLIENT_PUBLIC_FILES_PATH = exports.BLOCKED_PAGES = exports.BUILD_ID_FILE = exports.CONFIG_FILES = exports.SERVERLESS_DIRECTORY = exports.SERVER_DIRECTORY = exports.FONT_MANIFEST = exports.REACT_LOADABLE_MANIFEST = exports.DEV_MIDDLEWARE_MANIFEST = exports.MIDDLEWARE_MANIFEST = exports.FUNCTIONS_MANIFEST = exports.DEV_CLIENT_PAGES_MANIFEST = exports.SERVER_FILES_MANIFEST = exports.IMAGES_MANIFEST = exports.ROUTES_MANIFEST = exports.PRERENDER_MANIFEST = exports.EXPORT_DETAIL = exports.EXPORT_MARKER = exports.BUILD_MANIFEST = exports.PAGES_MANIFEST = exports.PHASE_TEST = exports.PHASE_DEVELOPMENT_SERVER = exports.PHASE_PRODUCTION_SERVER = exports.PHASE_PRODUCTION_BUILD = exports.PHASE_EXPORT = void 0;\nvar PHASE_EXPORT = \"phase-export\";\nexports.PHASE_EXPORT = PHASE_EXPORT;\nvar PHASE_PRODUCTION_BUILD = \"phase-production-build\";\nexports.PHASE_PRODUCTION_BUILD = PHASE_PRODUCTION_BUILD;\nvar PHASE_PRODUCTION_SERVER = \"phase-production-server\";\nexports.PHASE_PRODUCTION_SERVER = PHASE_PRODUCTION_SERVER;\nvar PHASE_DEVELOPMENT_SERVER = \"phase-development-server\";\nexports.PHASE_DEVELOPMENT_SERVER = PHASE_DEVELOPMENT_SERVER;\nvar PHASE_TEST = \"phase-test\";\nexports.PHASE_TEST = PHASE_TEST;\nvar PAGES_MANIFEST = \"pages-manifest.json\";\nexports.PAGES_MANIFEST = PAGES_MANIFEST;\nvar BUILD_MANIFEST = \"build-manifest.json\";\nexports.BUILD_MANIFEST = BUILD_MANIFEST;\nvar EXPORT_MARKER = \"export-marker.json\";\nexports.EXPORT_MARKER = EXPORT_MARKER;\nvar EXPORT_DETAIL = \"export-detail.json\";\nexports.EXPORT_DETAIL = EXPORT_DETAIL;\nvar PRERENDER_MANIFEST = \"prerender-manifest.json\";\nexports.PRERENDER_MANIFEST = PRERENDER_MANIFEST;\nvar ROUTES_MANIFEST = \"routes-manifest.json\";\nexports.ROUTES_MANIFEST = ROUTES_MANIFEST;\nvar IMAGES_MANIFEST = \"images-manifest.json\";\nexports.IMAGES_MANIFEST = IMAGES_MANIFEST;\nvar SERVER_FILES_MANIFEST = \"required-server-files.json\";\nexports.SERVER_FILES_MANIFEST = SERVER_FILES_MANIFEST;\nvar DEV_CLIENT_PAGES_MANIFEST = \"_devPagesManifest.json\";\nexports.DEV_CLIENT_PAGES_MANIFEST = DEV_CLIENT_PAGES_MANIFEST;\nvar FUNCTIONS_MANIFEST = \"functions-manifest.json\";\nexports.FUNCTIONS_MANIFEST = FUNCTIONS_MANIFEST;\nvar MIDDLEWARE_MANIFEST = \"middleware-manifest.json\";\nexports.MIDDLEWARE_MANIFEST = MIDDLEWARE_MANIFEST;\nvar DEV_MIDDLEWARE_MANIFEST = \"_devMiddlewareManifest.json\";\nexports.DEV_MIDDLEWARE_MANIFEST = DEV_MIDDLEWARE_MANIFEST;\nvar REACT_LOADABLE_MANIFEST = \"react-loadable-manifest.json\";\nexports.REACT_LOADABLE_MANIFEST = REACT_LOADABLE_MANIFEST;\nvar FONT_MANIFEST = \"font-manifest.json\";\nexports.FONT_MANIFEST = FONT_MANIFEST;\nvar SERVER_DIRECTORY = \"server\";\nexports.SERVER_DIRECTORY = SERVER_DIRECTORY;\nvar SERVERLESS_DIRECTORY = \"serverless\";\nexports.SERVERLESS_DIRECTORY = SERVERLESS_DIRECTORY;\nvar CONFIG_FILES = [\n    \"next.config.js\",\n    \"next.config.mjs\"\n];\nexports.CONFIG_FILES = CONFIG_FILES;\nvar BUILD_ID_FILE = \"BUILD_ID\";\nexports.BUILD_ID_FILE = BUILD_ID_FILE;\nvar BLOCKED_PAGES = [\n    \"/_document\",\n    \"/_app\",\n    \"/_error\"\n];\nexports.BLOCKED_PAGES = BLOCKED_PAGES;\nvar CLIENT_PUBLIC_FILES_PATH = \"public\";\nexports.CLIENT_PUBLIC_FILES_PATH = CLIENT_PUBLIC_FILES_PATH;\nvar CLIENT_STATIC_FILES_PATH = \"static\";\nexports.CLIENT_STATIC_FILES_PATH = CLIENT_STATIC_FILES_PATH;\nvar CLIENT_STATIC_FILES_RUNTIME = \"runtime\";\nexports.CLIENT_STATIC_FILES_RUNTIME = CLIENT_STATIC_FILES_RUNTIME;\nvar STRING_LITERAL_DROP_BUNDLE = \"__NEXT_DROP_CLIENT_FILE__\";\nexports.STRING_LITERAL_DROP_BUNDLE = STRING_LITERAL_DROP_BUNDLE;\nvar MIDDLEWARE_FLIGHT_MANIFEST = \"middleware-flight-manifest\";\nexports.MIDDLEWARE_FLIGHT_MANIFEST = MIDDLEWARE_FLIGHT_MANIFEST;\nvar MIDDLEWARE_BUILD_MANIFEST = \"middleware-build-manifest\";\nexports.MIDDLEWARE_BUILD_MANIFEST = MIDDLEWARE_BUILD_MANIFEST;\nvar MIDDLEWARE_REACT_LOADABLE_MANIFEST = \"middleware-react-loadable-manifest\";\nexports.MIDDLEWARE_REACT_LOADABLE_MANIFEST = MIDDLEWARE_REACT_LOADABLE_MANIFEST;\nvar CLIENT_STATIC_FILES_RUNTIME_MAIN = \"main\";\nexports.CLIENT_STATIC_FILES_RUNTIME_MAIN = CLIENT_STATIC_FILES_RUNTIME_MAIN;\nvar CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH = \"react-refresh\";\nexports.CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH = CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH;\nvar CLIENT_STATIC_FILES_RUNTIME_AMP = \"amp\";\nexports.CLIENT_STATIC_FILES_RUNTIME_AMP = CLIENT_STATIC_FILES_RUNTIME_AMP;\nvar CLIENT_STATIC_FILES_RUNTIME_WEBPACK = \"webpack\";\nexports.CLIENT_STATIC_FILES_RUNTIME_WEBPACK = CLIENT_STATIC_FILES_RUNTIME_WEBPACK;\nvar CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL = Symbol(\"polyfills\");\nexports.CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL = CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL;\nvar MIDDLEWARE_SSR_RUNTIME_WEBPACK = \"middleware-ssr-runtime\";\nexports.MIDDLEWARE_SSR_RUNTIME_WEBPACK = MIDDLEWARE_SSR_RUNTIME_WEBPACK;\nvar MIDDLEWARE_RUNTIME_WEBPACK = \"middleware-runtime\";\nexports.MIDDLEWARE_RUNTIME_WEBPACK = MIDDLEWARE_RUNTIME_WEBPACK;\nvar TEMPORARY_REDIRECT_STATUS = 307;\nexports.TEMPORARY_REDIRECT_STATUS = TEMPORARY_REDIRECT_STATUS;\nvar PERMANENT_REDIRECT_STATUS = 308;\nexports.PERMANENT_REDIRECT_STATUS = PERMANENT_REDIRECT_STATUS;\nvar STATIC_PROPS_ID = \"__N_SSG\";\nexports.STATIC_PROPS_ID = STATIC_PROPS_ID;\nvar SERVER_PROPS_ID = \"__N_SSP\";\nexports.SERVER_PROPS_ID = SERVER_PROPS_ID;\nvar FLIGHT_PROPS_ID = \"__N_RSC\";\nexports.FLIGHT_PROPS_ID = FLIGHT_PROPS_ID;\nvar GOOGLE_FONT_PROVIDER = \"https://fonts.googleapis.com/\";\nexports.GOOGLE_FONT_PROVIDER = GOOGLE_FONT_PROVIDER;\nvar OPTIMIZED_FONT_PROVIDERS = [\n    {\n        url: GOOGLE_FONT_PROVIDER,\n        preconnect: \"https://fonts.gstatic.com\"\n    },\n    {\n        url: \"https://use.typekit.net\",\n        preconnect: \"https://use.typekit.net\"\n    }, \n];\nexports.OPTIMIZED_FONT_PROVIDERS = OPTIMIZED_FONT_PROVIDERS;\nvar STATIC_STATUS_PAGES = [\n    \"/500\"\n];\nexports.STATIC_STATUS_PAGES = STATIC_STATUS_PAGES;\nvar TRACE_OUTPUT_VERSION = 1;\nexports.TRACE_OUTPUT_VERSION = TRACE_OUTPUT_VERSION; //# sourceMappingURL=constants.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/shared/lib/constants.js\n");

/***/ }),

/***/ "./pages/Aboutus.js":
/*!**************************!*\
  !*** ./pages/Aboutus.js ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_dist_lib_load_custom_routes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/lib/load-custom-routes */ \"./node_modules/next/dist/lib/load-custom-routes.js\");\nvar _this = undefined;\n\n\n\nvar Aboutus = function() {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Head, {}, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Jai Lakhmani\\\\Desktop\\\\codetrading\\\\codeblogs\\\\pages\\\\Aboutus.js\",\n                lineNumber: 5,\n                columnNumber: 3\n            }, _this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"section\", {\n                class: \"text-gray-600 body-font\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    class: \"container mx-auto flex px-5 py-24 md:flex-row flex-col items-center\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            class: \"lg:flex-grow md:w-1/2 lg:pr-24 md:pr-16 flex flex-col md:items-start md:text-left mb-16 md:mb-0 items-center text-center\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                                    class: \"title-font sm:text-4xl text-3xl mb-4 font-medium text-gray-900\",\n                                    children: [\n                                        \"Before they sold out\",\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {\n                                            class: \"hidden lg:inline-block\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\Jai Lakhmani\\\\Desktop\\\\codetrading\\\\codeblogs\\\\pages\\\\Aboutus.js\",\n                                            lineNumber: 12,\n                                            columnNumber: 13\n                                        }, _this),\n                                        \"readymade gluten\"\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\Users\\\\Jai Lakhmani\\\\Desktop\\\\codetrading\\\\codeblogs\\\\pages\\\\Aboutus.js\",\n                                    lineNumber: 11,\n                                    columnNumber: 11\n                                }, _this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                    class: \"mb-8 leading-relaxed\",\n                                    children: \"Copper mug try-hard pitchfork pour-over freegan heirloom neutra air plant cold-pressed tacos poke beard tote bag. Heirloom echo park mlkshk tote bag selvage hot chicken authentic tumeric truffaut hexagon try-hard chambray.\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\Jai Lakhmani\\\\Desktop\\\\codetrading\\\\codeblogs\\\\pages\\\\Aboutus.js\",\n                                    lineNumber: 14,\n                                    columnNumber: 11\n                                }, _this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    class: \"flex justify-center\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            class: \"inline-flex text-white bg-indigo-500 border-0 py-2 px-6 focus:outline-none hover:bg-indigo-600 rounded text-lg\",\n                                            children: \"Button\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\Jai Lakhmani\\\\Desktop\\\\codetrading\\\\codeblogs\\\\pages\\\\Aboutus.js\",\n                                            lineNumber: 16,\n                                            columnNumber: 13\n                                        }, _this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            class: \"ml-4 inline-flex text-gray-700 bg-gray-100 border-0 py-2 px-6 focus:outline-none hover:bg-gray-200 rounded text-lg\",\n                                            children: \"Button\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\Jai Lakhmani\\\\Desktop\\\\codetrading\\\\codeblogs\\\\pages\\\\Aboutus.js\",\n                                            lineNumber: 17,\n                                            columnNumber: 13\n                                        }, _this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\Users\\\\Jai Lakhmani\\\\Desktop\\\\codetrading\\\\codeblogs\\\\pages\\\\Aboutus.js\",\n                                    lineNumber: 15,\n                                    columnNumber: 11\n                                }, _this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\Jai Lakhmani\\\\Desktop\\\\codetrading\\\\codeblogs\\\\pages\\\\Aboutus.js\",\n                            lineNumber: 10,\n                            columnNumber: 9\n                        }, _this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            class: \"lg:max-w-lg lg:w-full md:w-1/2 w-5/6\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                class: \"object-cover object-center rounded\",\n                                alt: \"hero\",\n                                src: \"https://dummyimage.com/720x600\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\Jai Lakhmani\\\\Desktop\\\\codetrading\\\\codeblogs\\\\pages\\\\Aboutus.js\",\n                                lineNumber: 21,\n                                columnNumber: 11\n                            }, _this)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\Jai Lakhmani\\\\Desktop\\\\codetrading\\\\codeblogs\\\\pages\\\\Aboutus.js\",\n                            lineNumber: 20,\n                            columnNumber: 9\n                        }, _this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\Jai Lakhmani\\\\Desktop\\\\codetrading\\\\codeblogs\\\\pages\\\\Aboutus.js\",\n                    lineNumber: 9,\n                    columnNumber: 7\n                }, _this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Jai Lakhmani\\\\Desktop\\\\codetrading\\\\codeblogs\\\\pages\\\\Aboutus.js\",\n                lineNumber: 8,\n                columnNumber: 5\n            }, _this)\n        ]\n    }, void 0, true);\n};\n_c = Aboutus;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Aboutus);\nvar _c;\n$RefreshReg$(_c, \"Aboutus\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9BYm91dHVzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUF5QjtBQUNnQztBQUN6RCxJQUFNRSxPQUFPLEdBQUcsV0FBTTtJQUNwQixxQkFBUTs7MEJBQ1IsOERBQUNDLElBQUk7Ozs7cUJBRUU7MEJBQ0wsOERBQUNDLFNBQU87Z0JBQUNDLEtBQUssRUFBQyx5QkFBeUI7MEJBQ3RDLDRFQUFDQyxLQUFHO29CQUFDRCxLQUFLLEVBQUMscUVBQXFFOztzQ0FDOUUsOERBQUNDLEtBQUc7NEJBQUNELEtBQUssRUFBQywwSEFBMEg7OzhDQUNuSSw4REFBQ0UsSUFBRTtvQ0FBQ0YsS0FBSyxFQUFDLGdFQUFnRTs7d0NBQUMsc0JBQ3pFO3NEQUFBLDhEQUFDRyxJQUFFOzRDQUFDSCxLQUFLLEVBQUMsd0JBQXdCOzs7OztpREFBRTt3Q0FBQSxrQkFDdEM7Ozs7Ozt5Q0FBSzs4Q0FDTCw4REFBQ0ksR0FBQztvQ0FBQ0osS0FBSyxFQUFDLHNCQUFzQjs4Q0FBQyxnT0FBOE47Ozs7O3lDQUFJOzhDQUNsUSw4REFBQ0MsS0FBRztvQ0FBQ0QsS0FBSyxFQUFDLHFCQUFxQjs7c0RBQzlCLDhEQUFDSyxRQUFNOzRDQUFDTCxLQUFLLEVBQUMsZ0hBQWdIO3NEQUFDLFFBQU07Ozs7O2lEQUFTO3NEQUM5SSw4REFBQ0ssUUFBTTs0Q0FBQ0wsS0FBSyxFQUFDLG9IQUFvSDtzREFBQyxRQUFNOzs7OztpREFBUzs7Ozs7O3lDQUM5STs7Ozs7O2lDQUNGO3NDQUNOLDhEQUFDQyxLQUFHOzRCQUFDRCxLQUFLLEVBQUMsc0NBQXNDO3NDQUMvQyw0RUFBQ00sS0FBRztnQ0FBQ04sS0FBSyxFQUFDLG9DQUFvQztnQ0FBQ08sR0FBRyxFQUFDLE1BQU07Z0NBQUNDLEdBQUcsRUFBQyxnQ0FBZ0M7Ozs7O3FDQUFHOzs7OztpQ0FDOUY7Ozs7Ozt5QkFDRjs7Ozs7cUJBQ0k7O29CQUNULENBQUM7Q0FDUDtBQXZCS1gsS0FBQUEsT0FBTztBQXlCYiwrREFBZUEsT0FBTyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9wYWdlcy9BYm91dHVzLmpzPzM1NWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgeyBIZWFkZXIgfSBmcm9tICduZXh0L2Rpc3QvbGliL2xvYWQtY3VzdG9tLXJvdXRlcydcclxuY29uc3QgQWJvdXR1cyA9ICgpID0+IHtcclxuICByZXR1cm4gKDw+XHJcbiAgPEhlYWQ+XHJcblxyXG4gIDwvSGVhZD5cclxuICAgIDxzZWN0aW9uIGNsYXNzPVwidGV4dC1ncmF5LTYwMCBib2R5LWZvbnRcIj5cclxuICAgICAgPGRpdiBjbGFzcz1cImNvbnRhaW5lciBteC1hdXRvIGZsZXggcHgtNSBweS0yNCBtZDpmbGV4LXJvdyBmbGV4LWNvbCBpdGVtcy1jZW50ZXJcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwibGc6ZmxleC1ncm93IG1kOnctMS8yIGxnOnByLTI0IG1kOnByLTE2IGZsZXggZmxleC1jb2wgbWQ6aXRlbXMtc3RhcnQgbWQ6dGV4dC1sZWZ0IG1iLTE2IG1kOm1iLTAgaXRlbXMtY2VudGVyIHRleHQtY2VudGVyXCI+XHJcbiAgICAgICAgICA8aDEgY2xhc3M9XCJ0aXRsZS1mb250IHNtOnRleHQtNHhsIHRleHQtM3hsIG1iLTQgZm9udC1tZWRpdW0gdGV4dC1ncmF5LTkwMFwiPkJlZm9yZSB0aGV5IHNvbGQgb3V0XHJcbiAgICAgICAgICAgIDxiciBjbGFzcz1cImhpZGRlbiBsZzppbmxpbmUtYmxvY2tcIi8+cmVhZHltYWRlIGdsdXRlblxyXG4gICAgICAgICAgPC9oMT5cclxuICAgICAgICAgIDxwIGNsYXNzPVwibWItOCBsZWFkaW5nLXJlbGF4ZWRcIj5Db3BwZXIgbXVnIHRyeS1oYXJkIHBpdGNoZm9yayBwb3VyLW92ZXIgZnJlZWdhbiBoZWlybG9vbSBuZXV0cmEgYWlyIHBsYW50IGNvbGQtcHJlc3NlZCB0YWNvcyBwb2tlIGJlYXJkIHRvdGUgYmFnLiBIZWlybG9vbSBlY2hvIHBhcmsgbWxrc2hrIHRvdGUgYmFnIHNlbHZhZ2UgaG90IGNoaWNrZW4gYXV0aGVudGljIHR1bWVyaWMgdHJ1ZmZhdXQgaGV4YWdvbiB0cnktaGFyZCBjaGFtYnJheS48L3A+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmxleCBqdXN0aWZ5LWNlbnRlclwiPlxyXG4gICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiaW5saW5lLWZsZXggdGV4dC13aGl0ZSBiZy1pbmRpZ28tNTAwIGJvcmRlci0wIHB5LTIgcHgtNiBmb2N1czpvdXRsaW5lLW5vbmUgaG92ZXI6YmctaW5kaWdvLTYwMCByb3VuZGVkIHRleHQtbGdcIj5CdXR0b248L2J1dHRvbj5cclxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cIm1sLTQgaW5saW5lLWZsZXggdGV4dC1ncmF5LTcwMCBiZy1ncmF5LTEwMCBib3JkZXItMCBweS0yIHB4LTYgZm9jdXM6b3V0bGluZS1ub25lIGhvdmVyOmJnLWdyYXktMjAwIHJvdW5kZWQgdGV4dC1sZ1wiPkJ1dHRvbjwvYnV0dG9uPlxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImxnOm1heC13LWxnIGxnOnctZnVsbCBtZDp3LTEvMiB3LTUvNlwiPlxyXG4gICAgICAgICAgPGltZyBjbGFzcz1cIm9iamVjdC1jb3ZlciBvYmplY3QtY2VudGVyIHJvdW5kZWRcIiBhbHQ9XCJoZXJvXCIgc3JjPVwiaHR0cHM6Ly9kdW1teWltYWdlLmNvbS83MjB4NjAwXCIgLz5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9kaXY+XHJcbiAgICAgIDwvc2VjdGlvbj5cclxuICAgIDwvPilcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQWJvdXR1cyAgIl0sIm5hbWVzIjpbIlJlYWN0IiwiSGVhZGVyIiwiQWJvdXR1cyIsIkhlYWQiLCJzZWN0aW9uIiwiY2xhc3MiLCJkaXYiLCJoMSIsImJyIiwicCIsImJ1dHRvbiIsImltZyIsImFsdCIsInNyYyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/Aboutus.js\n");

/***/ }),

/***/ "./node_modules/next/dist/compiled/native-url/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/next/dist/compiled/native-url/index.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var __dirname = \"/\";\n(function(){var e={477:function(e){\"use strict\";e.exports=__webpack_require__(/*! querystring */ \"./node_modules/next/dist/compiled/querystring-es3/index.js\")}};var t={};function __nccwpck_require__(o){var a=t[o];if(a!==undefined){return a.exports}var s=t[o]={exports:{}};var n=true;try{e[o](s,s.exports,__nccwpck_require__);n=false}finally{if(n)delete t[o]}return s.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var o={};!function(){var e=o;var t,a=(t=__nccwpck_require__(477))&&\"object\"==typeof t&&\"default\"in t?t.default:t,s=/https?|ftp|gopher|file/;function r(e){\"string\"==typeof e&&(e=d(e));var t=function(e,t,o){var a=e.auth,s=e.hostname,n=e.protocol||\"\",p=e.pathname||\"\",c=e.hash||\"\",i=e.query||\"\",u=!1;a=a?encodeURIComponent(a).replace(/%3A/i,\":\")+\"@\":\"\",e.host?u=a+e.host:s&&(u=a+(~s.indexOf(\":\")?\"[\"+s+\"]\":s),e.port&&(u+=\":\"+e.port)),i&&\"object\"==typeof i&&(i=t.encode(i));var f=e.search||i&&\"?\"+i||\"\";return n&&\":\"!==n.substr(-1)&&(n+=\":\"),e.slashes||(!n||o.test(n))&&!1!==u?(u=\"//\"+(u||\"\"),p&&\"/\"!==p[0]&&(p=\"/\"+p)):u||(u=\"\"),c&&\"#\"!==c[0]&&(c=\"#\"+c),f&&\"?\"!==f[0]&&(f=\"?\"+f),{protocol:n,host:u,pathname:p=p.replace(/[?#]/g,encodeURIComponent),search:f=f.replace(\"#\",\"%23\"),hash:c}}(e,a,s);return\"\"+t.protocol+t.host+t.pathname+t.search+t.hash}var n=\"http://\",p=\"w.w\",c=n+p,i=/^([a-z0-9.+-]*:\\/\\/\\/)([a-z0-9.+-]:\\/*)?/i,u=/https?|ftp|gopher|file/;function h(e,t){var o=\"string\"==typeof e?d(e):e;e=\"object\"==typeof e?r(e):e;var a=d(t),s=\"\";o.protocol&&!o.slashes&&(s=o.protocol,e=e.replace(o.protocol,\"\"),s+=\"/\"===t[0]||\"/\"===e[0]?\"/\":\"\"),s&&a.protocol&&(s=\"\",a.slashes||(s=a.protocol,t=t.replace(a.protocol,\"\")));var p=e.match(i);p&&!a.protocol&&(e=e.substr((s=p[1]+(p[2]||\"\")).length),/^\\/\\/[^/]/.test(t)&&(s=s.slice(0,-1)));var f=new URL(e,c+\"/\"),m=new URL(t,f).toString().replace(c,\"\"),v=a.protocol||o.protocol;return v+=o.slashes||a.slashes?\"//\":\"\",!s&&v?m=m.replace(n,v):s&&(m=m.replace(n,\"\")),u.test(m)||~t.indexOf(\".\")||\"/\"===e.slice(-1)||\"/\"===t.slice(-1)||\"/\"!==m.slice(-1)||(m=m.slice(0,-1)),s&&(m=s+(\"/\"===m[0]?m.substr(1):m)),m}function l(){}l.prototype.parse=d,l.prototype.format=r,l.prototype.resolve=h,l.prototype.resolveObject=h;var f=/^https?|ftp|gopher|file/,m=/^(.*?)([#?].*)/,v=/^([a-z0-9.+-]*:)(\\/{0,3})(.*)/i,_=/^([a-z0-9.+-]*:)?\\/\\/\\/*/i,b=/^([a-z0-9.+-]*:)(\\/{0,2})\\[(.*)\\]$/i;function d(e,t,o){if(void 0===t&&(t=!1),void 0===o&&(o=!1),e&&\"object\"==typeof e&&e instanceof l)return e;var s=(e=e.trim()).match(m);e=s?s[1].replace(/\\\\/g,\"/\")+s[2]:e.replace(/\\\\/g,\"/\"),b.test(e)&&\"/\"!==e.slice(-1)&&(e+=\"/\");var n=!/(^javascript)/.test(e)&&e.match(v),i=_.test(e),u=\"\";n&&(f.test(n[1])||(u=n[1].toLowerCase(),e=\"\"+n[2]+n[3]),n[2]||(i=!1,f.test(n[1])?(u=n[1],e=\"\"+n[3]):e=\"//\"+n[3]),3!==n[2].length&&1!==n[2].length||(u=n[1],e=\"/\"+n[3]));var g,y=(s?s[1]:e).match(/^https?:\\/\\/[^/]+(:[0-9]+)(?=\\/|$)/),w=y&&y[1],C=new l,U=\"\",j=\"\";try{g=new URL(e)}catch(t){U=t,u||o||!/^\\/\\//.test(e)||/^\\/\\/.+[@.]/.test(e)||(j=\"/\",e=e.substr(1));try{g=new URL(e,c)}catch(e){return C.protocol=u,C.href=u,C}}C.slashes=i&&!j,C.host=g.host===p?\"\":g.host,C.hostname=g.hostname===p?\"\":g.hostname.replace(/(\\[|\\])/g,\"\"),C.protocol=U?u||null:g.protocol,C.search=g.search.replace(/\\\\/g,\"%5C\"),C.hash=g.hash.replace(/\\\\/g,\"%5C\");var x=e.split(\"#\");!C.search&&~x[0].indexOf(\"?\")&&(C.search=\"?\"),C.hash||\"\"!==x[1]||(C.hash=\"#\"),C.query=t?a.decode(g.search.substr(1)):C.search.substr(1),C.pathname=j+(n?function(e){return e.replace(/['^|`]/g,(function(e){return\"%\"+e.charCodeAt().toString(16).toUpperCase()})).replace(/((?:%[0-9A-F]{2})+)/g,(function(e,t){try{return decodeURIComponent(t).split(\"\").map((function(e){var t=e.charCodeAt();return t>256||/^[a-z0-9]$/i.test(e)?e:\"%\"+t.toString(16).toUpperCase()})).join(\"\")}catch(e){return t}}))}(g.pathname):g.pathname),\"about:\"===C.protocol&&\"blank\"===C.pathname&&(C.protocol=\"\",C.pathname=\"\"),U&&\"/\"!==e[0]&&(C.pathname=C.pathname.substr(1)),u&&!f.test(u)&&\"/\"!==e.slice(-1)&&\"/\"===C.pathname&&(C.pathname=\"\"),C.path=C.pathname+C.search,C.auth=[g.username,g.password].map(decodeURIComponent).filter(Boolean).join(\":\"),C.port=g.port,w&&!C.host.endsWith(w)&&(C.host+=w,C.port=w.slice(1)),C.href=j?\"\"+C.pathname+C.search+C.hash:r(C);var q=/^(file)/.test(C.href)?[\"host\",\"hostname\"]:[];return Object.keys(C).forEach((function(e){~q.indexOf(e)||(C[e]=C[e]||null)})),C}e.parse=d,e.format=r,e.resolve=h,e.resolveObject=function(e,t){return d(h(e,t))},e.Url=l}();module.exports=o})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL25hdGl2ZS11cmwvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IjtBQUFBLFlBQVksT0FBTyxnQkFBZ0IsYUFBYSxVQUFVLG1CQUFPLENBQUMsK0VBQWEsSUFBSSxTQUFTLGdDQUFnQyxXQUFXLGtCQUFrQixpQkFBaUIsWUFBWSxZQUFZLFdBQVcsSUFBSSxzQ0FBc0MsUUFBUSxRQUFRLGlCQUFpQixpQkFBaUIsbUVBQW1FLFNBQVMsS0FBSyxTQUFTLFlBQVksUUFBUSwrR0FBK0csY0FBYyw2QkFBNkIsc0JBQXNCLDRGQUE0Riw2S0FBNkssNkJBQTZCLGlMQUFpTCx5R0FBeUcsUUFBUSxzREFBc0QsdUdBQXVHLGdCQUFnQixnQ0FBZ0MsNEJBQTRCLGdCQUFnQiw4S0FBOEssaUJBQWlCLGdHQUFnRyx3RkFBd0Ysa09BQWtPLGNBQWMsMkZBQTJGLDBFQUEwRSxJQUFJLDZEQUE2RCxJQUFJLGFBQWEsa0JBQWtCLHdGQUF3Riw0QkFBNEIsNkZBQTZGLDREQUE0RCx3S0FBd0ssMkZBQTJGLElBQUksYUFBYSxTQUFTLHlFQUF5RSxJQUFJLGVBQWUsU0FBUyxnQ0FBZ0MscU5BQXFOLG1CQUFtQixvS0FBb0ssd0NBQXdDLG9EQUFvRCwwQkFBMEIsRUFBRSxxQkFBcUIsSUFBSSx3REFBd0QscUJBQXFCLHVFQUF1RSxZQUFZLFNBQVMsVUFBVSxHQUFHLHFiQUFxYixvREFBb0QsMkNBQTJDLGlDQUFpQyxLQUFLLCtEQUErRCxpQkFBaUIsU0FBUyxHQUFHLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL25hdGl2ZS11cmwvaW5kZXguanM/NzI0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXt2YXIgZT17NDc3OmZ1bmN0aW9uKGUpe1widXNlIHN0cmljdFwiO2UuZXhwb3J0cz1yZXF1aXJlKFwicXVlcnlzdHJpbmdcIil9fTt2YXIgdD17fTtmdW5jdGlvbiBfX25jY3dwY2tfcmVxdWlyZV9fKG8pe3ZhciBhPXRbb107aWYoYSE9PXVuZGVmaW5lZCl7cmV0dXJuIGEuZXhwb3J0c312YXIgcz10W29dPXtleHBvcnRzOnt9fTt2YXIgbj10cnVlO3RyeXtlW29dKHMscy5leHBvcnRzLF9fbmNjd3Bja19yZXF1aXJlX18pO249ZmFsc2V9ZmluYWxseXtpZihuKWRlbGV0ZSB0W29dfXJldHVybiBzLmV4cG9ydHN9aWYodHlwZW9mIF9fbmNjd3Bja19yZXF1aXJlX18hPT1cInVuZGVmaW5lZFwiKV9fbmNjd3Bja19yZXF1aXJlX18uYWI9X19kaXJuYW1lK1wiL1wiO3ZhciBvPXt9OyFmdW5jdGlvbigpe3ZhciBlPW87dmFyIHQsYT0odD1fX25jY3dwY2tfcmVxdWlyZV9fKDQ3NykpJiZcIm9iamVjdFwiPT10eXBlb2YgdCYmXCJkZWZhdWx0XCJpbiB0P3QuZGVmYXVsdDp0LHM9L2h0dHBzP3xmdHB8Z29waGVyfGZpbGUvO2Z1bmN0aW9uIHIoZSl7XCJzdHJpbmdcIj09dHlwZW9mIGUmJihlPWQoZSkpO3ZhciB0PWZ1bmN0aW9uKGUsdCxvKXt2YXIgYT1lLmF1dGgscz1lLmhvc3RuYW1lLG49ZS5wcm90b2NvbHx8XCJcIixwPWUucGF0aG5hbWV8fFwiXCIsYz1lLmhhc2h8fFwiXCIsaT1lLnF1ZXJ5fHxcIlwiLHU9ITE7YT1hP2VuY29kZVVSSUNvbXBvbmVudChhKS5yZXBsYWNlKC8lM0EvaSxcIjpcIikrXCJAXCI6XCJcIixlLmhvc3Q/dT1hK2UuaG9zdDpzJiYodT1hKyh+cy5pbmRleE9mKFwiOlwiKT9cIltcIitzK1wiXVwiOnMpLGUucG9ydCYmKHUrPVwiOlwiK2UucG9ydCkpLGkmJlwib2JqZWN0XCI9PXR5cGVvZiBpJiYoaT10LmVuY29kZShpKSk7dmFyIGY9ZS5zZWFyY2h8fGkmJlwiP1wiK2l8fFwiXCI7cmV0dXJuIG4mJlwiOlwiIT09bi5zdWJzdHIoLTEpJiYobis9XCI6XCIpLGUuc2xhc2hlc3x8KCFufHxvLnRlc3QobikpJiYhMSE9PXU/KHU9XCIvL1wiKyh1fHxcIlwiKSxwJiZcIi9cIiE9PXBbMF0mJihwPVwiL1wiK3ApKTp1fHwodT1cIlwiKSxjJiZcIiNcIiE9PWNbMF0mJihjPVwiI1wiK2MpLGYmJlwiP1wiIT09ZlswXSYmKGY9XCI/XCIrZikse3Byb3RvY29sOm4saG9zdDp1LHBhdGhuYW1lOnA9cC5yZXBsYWNlKC9bPyNdL2csZW5jb2RlVVJJQ29tcG9uZW50KSxzZWFyY2g6Zj1mLnJlcGxhY2UoXCIjXCIsXCIlMjNcIiksaGFzaDpjfX0oZSxhLHMpO3JldHVyblwiXCIrdC5wcm90b2NvbCt0Lmhvc3QrdC5wYXRobmFtZSt0LnNlYXJjaCt0Lmhhc2h9dmFyIG49XCJodHRwOi8vXCIscD1cIncud1wiLGM9bitwLGk9L14oW2EtejAtOS4rLV0qOlxcL1xcL1xcLykoW2EtejAtOS4rLV06XFwvKik/L2ksdT0vaHR0cHM/fGZ0cHxnb3BoZXJ8ZmlsZS87ZnVuY3Rpb24gaChlLHQpe3ZhciBvPVwic3RyaW5nXCI9PXR5cGVvZiBlP2QoZSk6ZTtlPVwib2JqZWN0XCI9PXR5cGVvZiBlP3IoZSk6ZTt2YXIgYT1kKHQpLHM9XCJcIjtvLnByb3RvY29sJiYhby5zbGFzaGVzJiYocz1vLnByb3RvY29sLGU9ZS5yZXBsYWNlKG8ucHJvdG9jb2wsXCJcIikscys9XCIvXCI9PT10WzBdfHxcIi9cIj09PWVbMF0/XCIvXCI6XCJcIikscyYmYS5wcm90b2NvbCYmKHM9XCJcIixhLnNsYXNoZXN8fChzPWEucHJvdG9jb2wsdD10LnJlcGxhY2UoYS5wcm90b2NvbCxcIlwiKSkpO3ZhciBwPWUubWF0Y2goaSk7cCYmIWEucHJvdG9jb2wmJihlPWUuc3Vic3RyKChzPXBbMV0rKHBbMl18fFwiXCIpKS5sZW5ndGgpLC9eXFwvXFwvW14vXS8udGVzdCh0KSYmKHM9cy5zbGljZSgwLC0xKSkpO3ZhciBmPW5ldyBVUkwoZSxjK1wiL1wiKSxtPW5ldyBVUkwodCxmKS50b1N0cmluZygpLnJlcGxhY2UoYyxcIlwiKSx2PWEucHJvdG9jb2x8fG8ucHJvdG9jb2w7cmV0dXJuIHYrPW8uc2xhc2hlc3x8YS5zbGFzaGVzP1wiLy9cIjpcIlwiLCFzJiZ2P209bS5yZXBsYWNlKG4sdik6cyYmKG09bS5yZXBsYWNlKG4sXCJcIikpLHUudGVzdChtKXx8fnQuaW5kZXhPZihcIi5cIil8fFwiL1wiPT09ZS5zbGljZSgtMSl8fFwiL1wiPT09dC5zbGljZSgtMSl8fFwiL1wiIT09bS5zbGljZSgtMSl8fChtPW0uc2xpY2UoMCwtMSkpLHMmJihtPXMrKFwiL1wiPT09bVswXT9tLnN1YnN0cigxKTptKSksbX1mdW5jdGlvbiBsKCl7fWwucHJvdG90eXBlLnBhcnNlPWQsbC5wcm90b3R5cGUuZm9ybWF0PXIsbC5wcm90b3R5cGUucmVzb2x2ZT1oLGwucHJvdG90eXBlLnJlc29sdmVPYmplY3Q9aDt2YXIgZj0vXmh0dHBzP3xmdHB8Z29waGVyfGZpbGUvLG09L14oLio/KShbIz9dLiopLyx2PS9eKFthLXowLTkuKy1dKjopKFxcL3swLDN9KSguKikvaSxfPS9eKFthLXowLTkuKy1dKjopP1xcL1xcL1xcLyovaSxiPS9eKFthLXowLTkuKy1dKjopKFxcL3swLDJ9KVxcWyguKilcXF0kL2k7ZnVuY3Rpb24gZChlLHQsbyl7aWYodm9pZCAwPT09dCYmKHQ9ITEpLHZvaWQgMD09PW8mJihvPSExKSxlJiZcIm9iamVjdFwiPT10eXBlb2YgZSYmZSBpbnN0YW5jZW9mIGwpcmV0dXJuIGU7dmFyIHM9KGU9ZS50cmltKCkpLm1hdGNoKG0pO2U9cz9zWzFdLnJlcGxhY2UoL1xcXFwvZyxcIi9cIikrc1syXTplLnJlcGxhY2UoL1xcXFwvZyxcIi9cIiksYi50ZXN0KGUpJiZcIi9cIiE9PWUuc2xpY2UoLTEpJiYoZSs9XCIvXCIpO3ZhciBuPSEvKF5qYXZhc2NyaXB0KS8udGVzdChlKSYmZS5tYXRjaCh2KSxpPV8udGVzdChlKSx1PVwiXCI7biYmKGYudGVzdChuWzFdKXx8KHU9blsxXS50b0xvd2VyQ2FzZSgpLGU9XCJcIituWzJdK25bM10pLG5bMl18fChpPSExLGYudGVzdChuWzFdKT8odT1uWzFdLGU9XCJcIituWzNdKTplPVwiLy9cIituWzNdKSwzIT09blsyXS5sZW5ndGgmJjEhPT1uWzJdLmxlbmd0aHx8KHU9blsxXSxlPVwiL1wiK25bM10pKTt2YXIgZyx5PShzP3NbMV06ZSkubWF0Y2goL15odHRwcz86XFwvXFwvW14vXSsoOlswLTldKykoPz1cXC98JCkvKSx3PXkmJnlbMV0sQz1uZXcgbCxVPVwiXCIsaj1cIlwiO3RyeXtnPW5ldyBVUkwoZSl9Y2F0Y2godCl7VT10LHV8fG98fCEvXlxcL1xcLy8udGVzdChlKXx8L15cXC9cXC8uK1tALl0vLnRlc3QoZSl8fChqPVwiL1wiLGU9ZS5zdWJzdHIoMSkpO3RyeXtnPW5ldyBVUkwoZSxjKX1jYXRjaChlKXtyZXR1cm4gQy5wcm90b2NvbD11LEMuaHJlZj11LEN9fUMuc2xhc2hlcz1pJiYhaixDLmhvc3Q9Zy5ob3N0PT09cD9cIlwiOmcuaG9zdCxDLmhvc3RuYW1lPWcuaG9zdG5hbWU9PT1wP1wiXCI6Zy5ob3N0bmFtZS5yZXBsYWNlKC8oXFxbfFxcXSkvZyxcIlwiKSxDLnByb3RvY29sPVU/dXx8bnVsbDpnLnByb3RvY29sLEMuc2VhcmNoPWcuc2VhcmNoLnJlcGxhY2UoL1xcXFwvZyxcIiU1Q1wiKSxDLmhhc2g9Zy5oYXNoLnJlcGxhY2UoL1xcXFwvZyxcIiU1Q1wiKTt2YXIgeD1lLnNwbGl0KFwiI1wiKTshQy5zZWFyY2gmJn54WzBdLmluZGV4T2YoXCI/XCIpJiYoQy5zZWFyY2g9XCI/XCIpLEMuaGFzaHx8XCJcIiE9PXhbMV18fChDLmhhc2g9XCIjXCIpLEMucXVlcnk9dD9hLmRlY29kZShnLnNlYXJjaC5zdWJzdHIoMSkpOkMuc2VhcmNoLnN1YnN0cigxKSxDLnBhdGhuYW1lPWorKG4/ZnVuY3Rpb24oZSl7cmV0dXJuIGUucmVwbGFjZSgvWydefGBdL2csKGZ1bmN0aW9uKGUpe3JldHVyblwiJVwiK2UuY2hhckNvZGVBdCgpLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpfSkpLnJlcGxhY2UoLygoPzolWzAtOUEtRl17Mn0pKykvZywoZnVuY3Rpb24oZSx0KXt0cnl7cmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudCh0KS5zcGxpdChcIlwiKS5tYXAoKGZ1bmN0aW9uKGUpe3ZhciB0PWUuY2hhckNvZGVBdCgpO3JldHVybiB0PjI1Nnx8L15bYS16MC05XSQvaS50ZXN0KGUpP2U6XCIlXCIrdC50b1N0cmluZygxNikudG9VcHBlckNhc2UoKX0pKS5qb2luKFwiXCIpfWNhdGNoKGUpe3JldHVybiB0fX0pKX0oZy5wYXRobmFtZSk6Zy5wYXRobmFtZSksXCJhYm91dDpcIj09PUMucHJvdG9jb2wmJlwiYmxhbmtcIj09PUMucGF0aG5hbWUmJihDLnByb3RvY29sPVwiXCIsQy5wYXRobmFtZT1cIlwiKSxVJiZcIi9cIiE9PWVbMF0mJihDLnBhdGhuYW1lPUMucGF0aG5hbWUuc3Vic3RyKDEpKSx1JiYhZi50ZXN0KHUpJiZcIi9cIiE9PWUuc2xpY2UoLTEpJiZcIi9cIj09PUMucGF0aG5hbWUmJihDLnBhdGhuYW1lPVwiXCIpLEMucGF0aD1DLnBhdGhuYW1lK0Muc2VhcmNoLEMuYXV0aD1bZy51c2VybmFtZSxnLnBhc3N3b3JkXS5tYXAoZGVjb2RlVVJJQ29tcG9uZW50KS5maWx0ZXIoQm9vbGVhbikuam9pbihcIjpcIiksQy5wb3J0PWcucG9ydCx3JiYhQy5ob3N0LmVuZHNXaXRoKHcpJiYoQy5ob3N0Kz13LEMucG9ydD13LnNsaWNlKDEpKSxDLmhyZWY9aj9cIlwiK0MucGF0aG5hbWUrQy5zZWFyY2grQy5oYXNoOnIoQyk7dmFyIHE9L14oZmlsZSkvLnRlc3QoQy5ocmVmKT9bXCJob3N0XCIsXCJob3N0bmFtZVwiXTpbXTtyZXR1cm4gT2JqZWN0LmtleXMoQykuZm9yRWFjaCgoZnVuY3Rpb24oZSl7fnEuaW5kZXhPZihlKXx8KENbZV09Q1tlXXx8bnVsbCl9KSksQ31lLnBhcnNlPWQsZS5mb3JtYXQ9cixlLnJlc29sdmU9aCxlLnJlc29sdmVPYmplY3Q9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZChoKGUsdCkpfSxlLlVybD1sfSgpO21vZHVsZS5leHBvcnRzPW99KSgpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/native-url/index.js\n");

/***/ }),

/***/ "./node_modules/next/dist/compiled/path-to-regexp/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/compiled/path-to-regexp/index.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * Tokenize input string.\n */\nfunction lexer(str) {\n    var tokens = [];\n    var i = 0;\n    while (i < str.length) {\n        var char = str[i];\n        if (char === \"*\" || char === \"+\" || char === \"?\") {\n            tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \"\\\\\") {\n            tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n            continue;\n        }\n        if (char === \"{\") {\n            tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \"}\") {\n            tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \":\") {\n            var name = \"\";\n            var j = i + 1;\n            while (j < str.length) {\n                var code = str.charCodeAt(j);\n                if (\n                // `0-9`\n                (code >= 48 && code <= 57) ||\n                    // `A-Z`\n                    (code >= 65 && code <= 90) ||\n                    // `a-z`\n                    (code >= 97 && code <= 122) ||\n                    // `_`\n                    code === 95) {\n                    name += str[j++];\n                    continue;\n                }\n                break;\n            }\n            if (!name)\n                throw new TypeError(\"Missing parameter name at \" + i);\n            tokens.push({ type: \"NAME\", index: i, value: name });\n            i = j;\n            continue;\n        }\n        if (char === \"(\") {\n            var count = 1;\n            var pattern = \"\";\n            var j = i + 1;\n            if (str[j] === \"?\") {\n                throw new TypeError(\"Pattern cannot start with \\\"?\\\" at \" + j);\n            }\n            while (j < str.length) {\n                if (str[j] === \"\\\\\") {\n                    pattern += str[j++] + str[j++];\n                    continue;\n                }\n                if (str[j] === \")\") {\n                    count--;\n                    if (count === 0) {\n                        j++;\n                        break;\n                    }\n                }\n                else if (str[j] === \"(\") {\n                    count++;\n                    if (str[j + 1] !== \"?\") {\n                        throw new TypeError(\"Capturing groups are not allowed at \" + j);\n                    }\n                }\n                pattern += str[j++];\n            }\n            if (count)\n                throw new TypeError(\"Unbalanced pattern at \" + i);\n            if (!pattern)\n                throw new TypeError(\"Missing pattern at \" + i);\n            tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n            i = j;\n            continue;\n        }\n        tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n    }\n    tokens.push({ type: \"END\", index: i, value: \"\" });\n    return tokens;\n}\n/**\n * Parse a string for the raw tokens.\n */\nfunction parse(str, options) {\n    if (options === void 0) { options = {}; }\n    var tokens = lexer(str);\n    var _a = options.prefixes, prefixes = _a === void 0 ? \"./\" : _a;\n    var defaultPattern = \"[^\" + escapeString(options.delimiter || \"/#?\") + \"]+?\";\n    var result = [];\n    var key = 0;\n    var i = 0;\n    var path = \"\";\n    var tryConsume = function (type) {\n        if (i < tokens.length && tokens[i].type === type)\n            return tokens[i++].value;\n    };\n    var mustConsume = function (type) {\n        var value = tryConsume(type);\n        if (value !== undefined)\n            return value;\n        var _a = tokens[i], nextType = _a.type, index = _a.index;\n        throw new TypeError(\"Unexpected \" + nextType + \" at \" + index + \", expected \" + type);\n    };\n    var consumeText = function () {\n        var result = \"\";\n        var value;\n        // tslint:disable-next-line\n        while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n            result += value;\n        }\n        return result;\n    };\n    while (i < tokens.length) {\n        var char = tryConsume(\"CHAR\");\n        var name = tryConsume(\"NAME\");\n        var pattern = tryConsume(\"PATTERN\");\n        if (name || pattern) {\n            var prefix = char || \"\";\n            if (prefixes.indexOf(prefix) === -1) {\n                path += prefix;\n                prefix = \"\";\n            }\n            if (path) {\n                result.push(path);\n                path = \"\";\n            }\n            result.push({\n                name: name || key++,\n                prefix: prefix,\n                suffix: \"\",\n                pattern: pattern || defaultPattern,\n                modifier: tryConsume(\"MODIFIER\") || \"\"\n            });\n            continue;\n        }\n        var value = char || tryConsume(\"ESCAPED_CHAR\");\n        if (value) {\n            path += value;\n            continue;\n        }\n        if (path) {\n            result.push(path);\n            path = \"\";\n        }\n        var open = tryConsume(\"OPEN\");\n        if (open) {\n            var prefix = consumeText();\n            var name_1 = tryConsume(\"NAME\") || \"\";\n            var pattern_1 = tryConsume(\"PATTERN\") || \"\";\n            var suffix = consumeText();\n            mustConsume(\"CLOSE\");\n            result.push({\n                name: name_1 || (pattern_1 ? key++ : \"\"),\n                pattern: name_1 && !pattern_1 ? defaultPattern : pattern_1,\n                prefix: prefix,\n                suffix: suffix,\n                modifier: tryConsume(\"MODIFIER\") || \"\"\n            });\n            continue;\n        }\n        mustConsume(\"END\");\n    }\n    return result;\n}\nexports.parse = parse;\n/**\n * Compile a string to a template function for the path.\n */\nfunction compile(str, options) {\n    return tokensToFunction(parse(str, options), options);\n}\nexports.compile = compile;\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction(tokens, options) {\n    if (options === void 0) { options = {}; }\n    var reFlags = flags(options);\n    var _a = options.encode, encode = _a === void 0 ? function (x) { return x; } : _a, _b = options.validate, validate = _b === void 0 ? true : _b;\n    // Compile all the tokens into regexps.\n    var matches = tokens.map(function (token) {\n        if (typeof token === \"object\") {\n            return new RegExp(\"^(?:\" + token.pattern + \")$\", reFlags);\n        }\n    });\n    return function (data) {\n        var path = \"\";\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            if (typeof token === \"string\") {\n                path += token;\n                continue;\n            }\n            var value = data ? data[token.name] : undefined;\n            var optional = token.modifier === \"?\" || token.modifier === \"*\";\n            var repeat = token.modifier === \"*\" || token.modifier === \"+\";\n            if (Array.isArray(value)) {\n                if (!repeat) {\n                    throw new TypeError(\"Expected \\\"\" + token.name + \"\\\" to not repeat, but got an array\");\n                }\n                if (value.length === 0) {\n                    if (optional)\n                        continue;\n                    throw new TypeError(\"Expected \\\"\" + token.name + \"\\\" to not be empty\");\n                }\n                for (var j = 0; j < value.length; j++) {\n                    var segment = encode(value[j], token);\n                    if (validate && !matches[i].test(segment)) {\n                        throw new TypeError(\"Expected all \\\"\" + token.name + \"\\\" to match \\\"\" + token.pattern + \"\\\", but got \\\"\" + segment + \"\\\"\");\n                    }\n                    path += token.prefix + segment + token.suffix;\n                }\n                continue;\n            }\n            if (typeof value === \"string\" || typeof value === \"number\") {\n                var segment = encode(String(value), token);\n                if (validate && !matches[i].test(segment)) {\n                    throw new TypeError(\"Expected \\\"\" + token.name + \"\\\" to match \\\"\" + token.pattern + \"\\\", but got \\\"\" + segment + \"\\\"\");\n                }\n                path += token.prefix + segment + token.suffix;\n                continue;\n            }\n            if (optional)\n                continue;\n            var typeOfMessage = repeat ? \"an array\" : \"a string\";\n            throw new TypeError(\"Expected \\\"\" + token.name + \"\\\" to be \" + typeOfMessage);\n        }\n        return path;\n    };\n}\nexports.tokensToFunction = tokensToFunction;\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nfunction match(str, options) {\n    var keys = [];\n    var re = pathToRegexp(str, keys, options);\n    return regexpToFunction(re, keys, options);\n}\nexports.match = match;\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nfunction regexpToFunction(re, keys, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.decode, decode = _a === void 0 ? function (x) { return x; } : _a;\n    return function (pathname) {\n        var m = re.exec(pathname);\n        if (!m)\n            return false;\n        var path = m[0], index = m.index;\n        var params = Object.create(null);\n        var _loop_1 = function (i) {\n            // tslint:disable-next-line\n            if (m[i] === undefined)\n                return \"continue\";\n            var key = keys[i - 1];\n            if (key.modifier === \"*\" || key.modifier === \"+\") {\n                params[key.name] = m[i].split(key.prefix + key.suffix).map(function (value) {\n                    return decode(value, key);\n                });\n            }\n            else {\n                params[key.name] = decode(m[i], key);\n            }\n        };\n        for (var i = 1; i < m.length; i++) {\n            _loop_1(i);\n        }\n        return { path: path, index: index, params: params };\n    };\n}\nexports.regexpToFunction = regexpToFunction;\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str) {\n    return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options) {\n    return options && options.sensitive ? \"\" : \"i\";\n}\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path, keys) {\n    if (!keys)\n        return path;\n    // Use a negative lookahead to match only capturing groups.\n    var groups = path.source.match(/\\((?!\\?)/g);\n    if (groups) {\n        for (var i = 0; i < groups.length; i++) {\n            keys.push({\n                name: i,\n                prefix: \"\",\n                suffix: \"\",\n                modifier: \"\",\n                pattern: \"\"\n            });\n        }\n    }\n    return path;\n}\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(paths, keys, options) {\n    var parts = paths.map(function (path) { return pathToRegexp(path, keys, options).source; });\n    return new RegExp(\"(?:\" + parts.join(\"|\") + \")\", flags(options));\n}\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(path, keys, options) {\n    return tokensToRegexp(parse(path, options), keys, options);\n}\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nfunction tokensToRegexp(tokens, keys, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.strict, strict = _a === void 0 ? false : _a, _b = options.start, start = _b === void 0 ? true : _b, _c = options.end, end = _c === void 0 ? true : _c, _d = options.encode, encode = _d === void 0 ? function (x) { return x; } : _d;\n    var endsWith = \"[\" + escapeString(options.endsWith || \"\") + \"]|$\";\n    var delimiter = \"[\" + escapeString(options.delimiter || \"/#?\") + \"]\";\n    var route = start ? \"^\" : \"\";\n    // Iterate over the tokens and create our regexp string.\n    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n        var token = tokens_1[_i];\n        if (typeof token === \"string\") {\n            route += escapeString(encode(token));\n        }\n        else {\n            var prefix = escapeString(encode(token.prefix));\n            var suffix = escapeString(encode(token.suffix));\n            if (token.pattern) {\n                if (keys)\n                    keys.push(token);\n                if (prefix || suffix) {\n                    if (token.modifier === \"+\" || token.modifier === \"*\") {\n                        var mod = token.modifier === \"*\" ? \"?\" : \"\";\n                        route += \"(?:\" + prefix + \"((?:\" + token.pattern + \")(?:\" + suffix + prefix + \"(?:\" + token.pattern + \"))*)\" + suffix + \")\" + mod;\n                    }\n                    else {\n                        route += \"(?:\" + prefix + \"(\" + token.pattern + \")\" + suffix + \")\" + token.modifier;\n                    }\n                }\n                else {\n                    route += \"(\" + token.pattern + \")\" + token.modifier;\n                }\n            }\n            else {\n                route += \"(?:\" + prefix + suffix + \")\" + token.modifier;\n            }\n        }\n    }\n    if (end) {\n        if (!strict)\n            route += delimiter + \"?\";\n        route += !options.endsWith ? \"$\" : \"(?=\" + endsWith + \")\";\n    }\n    else {\n        var endToken = tokens[tokens.length - 1];\n        var isEndDelimited = typeof endToken === \"string\"\n            ? delimiter.indexOf(endToken[endToken.length - 1]) > -1\n            : // tslint:disable-next-line\n                endToken === undefined;\n        if (!strict) {\n            route += \"(?:\" + delimiter + \"(?=\" + endsWith + \"))?\";\n        }\n        if (!isEndDelimited) {\n            route += \"(?=\" + delimiter + \"|\" + endsWith + \")\";\n        }\n    }\n    return new RegExp(route, flags(options));\n}\nexports.tokensToRegexp = tokensToRegexp;\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nfunction pathToRegexp(path, keys, options) {\n    if (path instanceof RegExp)\n        return regexpToRegexp(path, keys);\n    if (Array.isArray(path))\n        return arrayToRegexp(path, keys, options);\n    return stringToRegexp(path, keys, options);\n}\nexports.pathToRegexp = pathToRegexp;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/path-to-regexp/index.js\n");

/***/ }),

/***/ "./node_modules/next/dist/compiled/process/browser.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/process/browser.js ***!
  \************************************************************/
/***/ (function(module) {

eval("var __dirname = \"/\";\n(function(){var e={162:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(162);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3MvYnJvd3Nlci5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsWUFBWSxPQUFPLGdCQUFnQixtQkFBbUIsTUFBTSxNQUFNLDRCQUE0QixtREFBbUQsK0JBQStCLHFEQUFxRCxZQUFZLElBQUksbUNBQW1DLGFBQWEsS0FBSyxvQkFBb0IsU0FBUyxtQkFBbUIsSUFBSSxxQ0FBcUMsZUFBZSxLQUFLLHVCQUF1QixTQUFTLHVCQUF1QixJQUFJLHVCQUF1QixtQkFBbUIsdUJBQXVCLDJDQUEyQyxhQUFhLHVCQUF1QixJQUFJLGNBQWMsU0FBUyxJQUFJLHdCQUF3QixTQUFTLDBCQUEwQiw0QkFBNEIscUJBQXFCLHVCQUF1QixnREFBZ0QsZUFBZSx1QkFBdUIsSUFBSSxZQUFZLFNBQVMsSUFBSSxzQkFBc0IsU0FBUyx3QkFBd0IsU0FBUyxZQUFZLE1BQU0sU0FBUywyQkFBMkIsV0FBVyxPQUFPLFFBQVEsYUFBYSxjQUFjLEtBQUssS0FBSyxhQUFhLGNBQWMsc0JBQXNCLE1BQU0sT0FBTyxrQ0FBa0MsT0FBTyxlQUFlLFNBQVMsSUFBSSxLQUFLLGFBQWEsTUFBTSxZQUFZLEtBQUssV0FBVyxPQUFPLFFBQVEsbUJBQW1CLHVCQUF1QixvQ0FBb0MsdUJBQXVCLFlBQVksbUJBQW1CLEtBQUsscUJBQXFCLHNCQUFzQixxQkFBcUIseUJBQXlCLG1CQUFtQixXQUFXLGFBQWEsOEJBQThCLGlDQUFpQyxrQkFBa0IsZUFBZSxTQUFTLFVBQVUsYUFBYSxjQUFjLGlCQUFpQixVQUFVLG1CQUFtQixZQUFZLFdBQVcsc0JBQXNCLDBCQUEwQixZQUFZLHVCQUF1QiwyQkFBMkIsd0JBQXdCLFVBQVUsc0JBQXNCLHFEQUFxRCxpQkFBaUIsV0FBVyxvQkFBb0IsbURBQW1ELG1CQUFtQixZQUFZLFNBQVMsZ0NBQWdDLFdBQVcsa0JBQWtCLGlCQUFpQixZQUFZLFlBQVksV0FBVyxJQUFJLHNDQUFzQyxRQUFRLFFBQVEsaUJBQWlCLGlCQUFpQixtRUFBbUUsU0FBUyxLQUFLLCtCQUErQixpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9wcm9jZXNzL2Jyb3dzZXIuanM/MWIxZCJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXt2YXIgZT17MTYyOmZ1bmN0aW9uKGUpe3ZhciB0PWUuZXhwb3J0cz17fTt2YXIgcjt2YXIgbjtmdW5jdGlvbiBkZWZhdWx0U2V0VGltb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwic2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZFwiKX1mdW5jdGlvbiBkZWZhdWx0Q2xlYXJUaW1lb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwiY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkXCIpfShmdW5jdGlvbigpe3RyeXtpZih0eXBlb2Ygc2V0VGltZW91dD09PVwiZnVuY3Rpb25cIil7cj1zZXRUaW1lb3V0fWVsc2V7cj1kZWZhdWx0U2V0VGltb3V0fX1jYXRjaChlKXtyPWRlZmF1bHRTZXRUaW1vdXR9dHJ5e2lmKHR5cGVvZiBjbGVhclRpbWVvdXQ9PT1cImZ1bmN0aW9uXCIpe249Y2xlYXJUaW1lb3V0fWVsc2V7bj1kZWZhdWx0Q2xlYXJUaW1lb3V0fX1jYXRjaChlKXtuPWRlZmF1bHRDbGVhclRpbWVvdXR9fSkoKTtmdW5jdGlvbiBydW5UaW1lb3V0KGUpe2lmKHI9PT1zZXRUaW1lb3V0KXtyZXR1cm4gc2V0VGltZW91dChlLDApfWlmKChyPT09ZGVmYXVsdFNldFRpbW91dHx8IXIpJiZzZXRUaW1lb3V0KXtyPXNldFRpbWVvdXQ7cmV0dXJuIHNldFRpbWVvdXQoZSwwKX10cnl7cmV0dXJuIHIoZSwwKX1jYXRjaCh0KXt0cnl7cmV0dXJuIHIuY2FsbChudWxsLGUsMCl9Y2F0Y2godCl7cmV0dXJuIHIuY2FsbCh0aGlzLGUsMCl9fX1mdW5jdGlvbiBydW5DbGVhclRpbWVvdXQoZSl7aWYobj09PWNsZWFyVGltZW91dCl7cmV0dXJuIGNsZWFyVGltZW91dChlKX1pZigobj09PWRlZmF1bHRDbGVhclRpbWVvdXR8fCFuKSYmY2xlYXJUaW1lb3V0KXtuPWNsZWFyVGltZW91dDtyZXR1cm4gY2xlYXJUaW1lb3V0KGUpfXRyeXtyZXR1cm4gbihlKX1jYXRjaCh0KXt0cnl7cmV0dXJuIG4uY2FsbChudWxsLGUpfWNhdGNoKHQpe3JldHVybiBuLmNhbGwodGhpcyxlKX19fXZhciBpPVtdO3ZhciBvPWZhbHNlO3ZhciB1O3ZhciBhPS0xO2Z1bmN0aW9uIGNsZWFuVXBOZXh0VGljaygpe2lmKCFvfHwhdSl7cmV0dXJufW89ZmFsc2U7aWYodS5sZW5ndGgpe2k9dS5jb25jYXQoaSl9ZWxzZXthPS0xfWlmKGkubGVuZ3RoKXtkcmFpblF1ZXVlKCl9fWZ1bmN0aW9uIGRyYWluUXVldWUoKXtpZihvKXtyZXR1cm59dmFyIGU9cnVuVGltZW91dChjbGVhblVwTmV4dFRpY2spO289dHJ1ZTt2YXIgdD1pLmxlbmd0aDt3aGlsZSh0KXt1PWk7aT1bXTt3aGlsZSgrK2E8dCl7aWYodSl7dVthXS5ydW4oKX19YT0tMTt0PWkubGVuZ3RofXU9bnVsbDtvPWZhbHNlO3J1bkNsZWFyVGltZW91dChlKX10Lm5leHRUaWNrPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoLTEpO2lmKGFyZ3VtZW50cy5sZW5ndGg+MSl7Zm9yKHZhciByPTE7cjxhcmd1bWVudHMubGVuZ3RoO3IrKyl7dFtyLTFdPWFyZ3VtZW50c1tyXX19aS5wdXNoKG5ldyBJdGVtKGUsdCkpO2lmKGkubGVuZ3RoPT09MSYmIW8pe3J1blRpbWVvdXQoZHJhaW5RdWV1ZSl9fTtmdW5jdGlvbiBJdGVtKGUsdCl7dGhpcy5mdW49ZTt0aGlzLmFycmF5PXR9SXRlbS5wcm90b3R5cGUucnVuPWZ1bmN0aW9uKCl7dGhpcy5mdW4uYXBwbHkobnVsbCx0aGlzLmFycmF5KX07dC50aXRsZT1cImJyb3dzZXJcIjt0LmJyb3dzZXI9dHJ1ZTt0LmVudj17fTt0LmFyZ3Y9W107dC52ZXJzaW9uPVwiXCI7dC52ZXJzaW9ucz17fTtmdW5jdGlvbiBub29wKCl7fXQub249bm9vcDt0LmFkZExpc3RlbmVyPW5vb3A7dC5vbmNlPW5vb3A7dC5vZmY9bm9vcDt0LnJlbW92ZUxpc3RlbmVyPW5vb3A7dC5yZW1vdmVBbGxMaXN0ZW5lcnM9bm9vcDt0LmVtaXQ9bm9vcDt0LnByZXBlbmRMaXN0ZW5lcj1ub29wO3QucHJlcGVuZE9uY2VMaXN0ZW5lcj1ub29wO3QubGlzdGVuZXJzPWZ1bmN0aW9uKGUpe3JldHVybltdfTt0LmJpbmRpbmc9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5iaW5kaW5nIGlzIG5vdCBzdXBwb3J0ZWRcIil9O3QuY3dkPWZ1bmN0aW9uKCl7cmV0dXJuXCIvXCJ9O3QuY2hkaXI9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkXCIpfTt0LnVtYXNrPWZ1bmN0aW9uKCl7cmV0dXJuIDB9fX07dmFyIHQ9e307ZnVuY3Rpb24gX19uY2N3cGNrX3JlcXVpcmVfXyhyKXt2YXIgbj10W3JdO2lmKG4hPT11bmRlZmluZWQpe3JldHVybiBuLmV4cG9ydHN9dmFyIGk9dFtyXT17ZXhwb3J0czp7fX07dmFyIG89dHJ1ZTt0cnl7ZVtyXShpLGkuZXhwb3J0cyxfX25jY3dwY2tfcmVxdWlyZV9fKTtvPWZhbHNlfWZpbmFsbHl7aWYobylkZWxldGUgdFtyXX1yZXR1cm4gaS5leHBvcnRzfWlmKHR5cGVvZiBfX25jY3dwY2tfcmVxdWlyZV9fIT09XCJ1bmRlZmluZWRcIilfX25jY3dwY2tfcmVxdWlyZV9fLmFiPV9fZGlybmFtZStcIi9cIjt2YXIgcj1fX25jY3dwY2tfcmVxdWlyZV9fKDE2Mik7bW9kdWxlLmV4cG9ydHM9cn0pKCk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/process/browser.js\n");

/***/ }),

/***/ "./node_modules/next/dist/compiled/querystring-es3/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/querystring-es3/index.js ***!
  \******************************************************************/
/***/ (function(module) {

eval("var __dirname = \"/\";\n(function(){\"use strict\";var e={540:function(e){function hasOwnProperty(e,r){return Object.prototype.hasOwnProperty.call(e,r)}e.exports=function(e,n,t,o){n=n||\"&\";t=t||\"=\";var a={};if(typeof e!==\"string\"||e.length===0){return a}var i=/\\+/g;e=e.split(n);var u=1e3;if(o&&typeof o.maxKeys===\"number\"){u=o.maxKeys}var c=e.length;if(u>0&&c>u){c=u}for(var p=0;p<c;++p){var f=e[p].replace(i,\"%20\"),s=f.indexOf(t),_,l,y,d;if(s>=0){_=f.substr(0,s);l=f.substr(s+1)}else{_=f;l=\"\"}y=decodeURIComponent(_);d=decodeURIComponent(l);if(!hasOwnProperty(a,y)){a[y]=d}else if(r(a[y])){a[y].push(d)}else{a[y]=[a[y],d]}}return a};var r=Array.isArray||function(e){return Object.prototype.toString.call(e)===\"[object Array]\"}},128:function(e){var stringifyPrimitive=function(e){switch(typeof e){case\"string\":return e;case\"boolean\":return e?\"true\":\"false\";case\"number\":return isFinite(e)?e:\"\";default:return\"\"}};e.exports=function(e,t,o,a){t=t||\"&\";o=o||\"=\";if(e===null){e=undefined}if(typeof e===\"object\"){return map(n(e),(function(n){var a=encodeURIComponent(stringifyPrimitive(n))+o;if(r(e[n])){return map(e[n],(function(e){return a+encodeURIComponent(stringifyPrimitive(e))})).join(t)}else{return a+encodeURIComponent(stringifyPrimitive(e[n]))}})).join(t)}if(!a)return\"\";return encodeURIComponent(stringifyPrimitive(a))+o+encodeURIComponent(stringifyPrimitive(e))};var r=Array.isArray||function(e){return Object.prototype.toString.call(e)===\"[object Array]\"};function map(e,r){if(e.map)return e.map(r);var n=[];for(var t=0;t<e.length;t++){n.push(r(e[t],t))}return n}var n=Object.keys||function(e){var r=[];for(var n in e){if(Object.prototype.hasOwnProperty.call(e,n))r.push(n)}return r}}};var r={};function __nccwpck_require__(n){var t=r[n];if(t!==undefined){return t.exports}var o=r[n]={exports:{}};var a=true;try{e[n](o,o.exports,__nccwpck_require__);a=false}finally{if(a)delete r[n]}return o.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var n={};!function(){var e=n;e.decode=e.parse=__nccwpck_require__(540);e.encode=e.stringify=__nccwpck_require__(128)}();module.exports=n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3F1ZXJ5c3RyaW5nLWVzMy9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsWUFBWSxhQUFhLE9BQU8sZ0JBQWdCLDZCQUE2QixpREFBaUQsNEJBQTRCLFNBQVMsU0FBUyxTQUFTLHNDQUFzQyxTQUFTLFlBQVksYUFBYSxVQUFVLG1DQUFtQyxZQUFZLGVBQWUsYUFBYSxJQUFJLFlBQVksSUFBSSxLQUFLLG1EQUFtRCxTQUFTLGdCQUFnQixnQkFBZ0IsS0FBSyxJQUFJLEtBQUssd0JBQXdCLHdCQUF3Qix5QkFBeUIsT0FBTyxpQkFBaUIsYUFBYSxLQUFLLGVBQWUsVUFBVSxpQ0FBaUMsNkRBQTZELGlCQUFpQixtQ0FBbUMsaUJBQWlCLHNCQUFzQixzQ0FBc0MscUNBQXFDLG1CQUFtQiw0QkFBNEIsU0FBUyxTQUFTLGFBQWEsWUFBWSx3QkFBd0IsNkJBQTZCLGtEQUFrRCxZQUFZLDZCQUE2QixtREFBbUQsV0FBVyxLQUFLLHVEQUF1RCxXQUFXLGVBQWUsOEZBQThGLGlDQUFpQyw2REFBNkQsa0JBQWtCLHlCQUF5QixTQUFTLFlBQVksV0FBVyxLQUFLLGtCQUFrQixTQUFTLCtCQUErQixTQUFTLGdCQUFnQix1REFBdUQsWUFBWSxTQUFTLGdDQUFnQyxXQUFXLGtCQUFrQixpQkFBaUIsWUFBWSxZQUFZLFdBQVcsSUFBSSxzQ0FBc0MsUUFBUSxRQUFRLGlCQUFpQixpQkFBaUIsbUVBQW1FLFNBQVMsS0FBSyxTQUFTLFlBQVksUUFBUSwwQ0FBMEMsOENBQThDLEdBQUcsaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcXVlcnlzdHJpbmctZXMzL2luZGV4LmpzPzI0MWYiXSwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7XCJ1c2Ugc3RyaWN0XCI7dmFyIGU9ezU0MDpmdW5jdGlvbihlKXtmdW5jdGlvbiBoYXNPd25Qcm9wZXJ0eShlLHIpe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxyKX1lLmV4cG9ydHM9ZnVuY3Rpb24oZSxuLHQsbyl7bj1ufHxcIiZcIjt0PXR8fFwiPVwiO3ZhciBhPXt9O2lmKHR5cGVvZiBlIT09XCJzdHJpbmdcInx8ZS5sZW5ndGg9PT0wKXtyZXR1cm4gYX12YXIgaT0vXFwrL2c7ZT1lLnNwbGl0KG4pO3ZhciB1PTFlMztpZihvJiZ0eXBlb2Ygby5tYXhLZXlzPT09XCJudW1iZXJcIil7dT1vLm1heEtleXN9dmFyIGM9ZS5sZW5ndGg7aWYodT4wJiZjPnUpe2M9dX1mb3IodmFyIHA9MDtwPGM7KytwKXt2YXIgZj1lW3BdLnJlcGxhY2UoaSxcIiUyMFwiKSxzPWYuaW5kZXhPZih0KSxfLGwseSxkO2lmKHM+PTApe189Zi5zdWJzdHIoMCxzKTtsPWYuc3Vic3RyKHMrMSl9ZWxzZXtfPWY7bD1cIlwifXk9ZGVjb2RlVVJJQ29tcG9uZW50KF8pO2Q9ZGVjb2RlVVJJQ29tcG9uZW50KGwpO2lmKCFoYXNPd25Qcm9wZXJ0eShhLHkpKXthW3ldPWR9ZWxzZSBpZihyKGFbeV0pKXthW3ldLnB1c2goZCl9ZWxzZXthW3ldPVthW3ldLGRdfX1yZXR1cm4gYX07dmFyIHI9QXJyYXkuaXNBcnJheXx8ZnVuY3Rpb24oZSl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKT09PVwiW29iamVjdCBBcnJheV1cIn19LDEyODpmdW5jdGlvbihlKXt2YXIgc3RyaW5naWZ5UHJpbWl0aXZlPWZ1bmN0aW9uKGUpe3N3aXRjaCh0eXBlb2YgZSl7Y2FzZVwic3RyaW5nXCI6cmV0dXJuIGU7Y2FzZVwiYm9vbGVhblwiOnJldHVybiBlP1widHJ1ZVwiOlwiZmFsc2VcIjtjYXNlXCJudW1iZXJcIjpyZXR1cm4gaXNGaW5pdGUoZSk/ZTpcIlwiO2RlZmF1bHQ6cmV0dXJuXCJcIn19O2UuZXhwb3J0cz1mdW5jdGlvbihlLHQsbyxhKXt0PXR8fFwiJlwiO289b3x8XCI9XCI7aWYoZT09PW51bGwpe2U9dW5kZWZpbmVkfWlmKHR5cGVvZiBlPT09XCJvYmplY3RcIil7cmV0dXJuIG1hcChuKGUpLChmdW5jdGlvbihuKXt2YXIgYT1lbmNvZGVVUklDb21wb25lbnQoc3RyaW5naWZ5UHJpbWl0aXZlKG4pKStvO2lmKHIoZVtuXSkpe3JldHVybiBtYXAoZVtuXSwoZnVuY3Rpb24oZSl7cmV0dXJuIGErZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShlKSl9KSkuam9pbih0KX1lbHNle3JldHVybiBhK2VuY29kZVVSSUNvbXBvbmVudChzdHJpbmdpZnlQcmltaXRpdmUoZVtuXSkpfX0pKS5qb2luKHQpfWlmKCFhKXJldHVyblwiXCI7cmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudChzdHJpbmdpZnlQcmltaXRpdmUoYSkpK28rZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShlKSl9O3ZhciByPUFycmF5LmlzQXJyYXl8fGZ1bmN0aW9uKGUpe3JldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSk9PT1cIltvYmplY3QgQXJyYXldXCJ9O2Z1bmN0aW9uIG1hcChlLHIpe2lmKGUubWFwKXJldHVybiBlLm1hcChyKTt2YXIgbj1bXTtmb3IodmFyIHQ9MDt0PGUubGVuZ3RoO3QrKyl7bi5wdXNoKHIoZVt0XSx0KSl9cmV0dXJuIG59dmFyIG49T2JqZWN0LmtleXN8fGZ1bmN0aW9uKGUpe3ZhciByPVtdO2Zvcih2YXIgbiBpbiBlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxuKSlyLnB1c2gobil9cmV0dXJuIHJ9fX07dmFyIHI9e307ZnVuY3Rpb24gX19uY2N3cGNrX3JlcXVpcmVfXyhuKXt2YXIgdD1yW25dO2lmKHQhPT11bmRlZmluZWQpe3JldHVybiB0LmV4cG9ydHN9dmFyIG89cltuXT17ZXhwb3J0czp7fX07dmFyIGE9dHJ1ZTt0cnl7ZVtuXShvLG8uZXhwb3J0cyxfX25jY3dwY2tfcmVxdWlyZV9fKTthPWZhbHNlfWZpbmFsbHl7aWYoYSlkZWxldGUgcltuXX1yZXR1cm4gby5leHBvcnRzfWlmKHR5cGVvZiBfX25jY3dwY2tfcmVxdWlyZV9fIT09XCJ1bmRlZmluZWRcIilfX25jY3dwY2tfcmVxdWlyZV9fLmFiPV9fZGlybmFtZStcIi9cIjt2YXIgbj17fTshZnVuY3Rpb24oKXt2YXIgZT1uO2UuZGVjb2RlPWUucGFyc2U9X19uY2N3cGNrX3JlcXVpcmVfXyg1NDApO2UuZW5jb2RlPWUuc3RyaW5naWZ5PV9fbmNjd3Bja19yZXF1aXJlX18oMTI4KX0oKTttb2R1bGUuZXhwb3J0cz1ufSkoKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/querystring-es3/index.js\n");

/***/ }),

/***/ "./node_modules/next/dist/lib/chalk.js":
/*!*********************************************!*\
  !*** ./node_modules/next/dist/lib/chalk.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = void 0;\nlet chalk;\nif (false) {} else {\n    chalk = (__webpack_require__(/*! ./web/chalk */ \"./node_modules/next/dist/lib/web/chalk.js\")[\"default\"]);\n}\nvar _default = chalk;\nexports[\"default\"] = _default;\n\n//# sourceMappingURL=chalk.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2xpYi9jaGFsay5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQSxJQUFJLEtBQWdCLEVBQUUsRUFFckIsQ0FBQztBQUNGLFlBQVksZ0dBQThCO0FBQzFDO0FBQ0E7QUFDQSxrQkFBZTs7QUFFZiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2xpYi9jaGFsay5qcz81NDkwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xubGV0IGNoYWxrO1xuaWYgKCFwcm9jZXNzLmJyb3dzZXIpIHtcbiAgICBjaGFsayA9IHJlcXVpcmUoJ25leHQvZGlzdC9jb21waWxlZC9jaGFsaycpO1xufSBlbHNlIHtcbiAgICBjaGFsayA9IHJlcXVpcmUoJy4vd2ViL2NoYWxrJykuZGVmYXVsdDtcbn1cbnZhciBfZGVmYXVsdCA9IGNoYWxrO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNoYWxrLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/lib/chalk.js\n");

/***/ }),

/***/ "./node_modules/next/dist/lib/load-custom-routes.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/lib/load-custom-routes.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = loadCustomRoutes;\nexports.getRedirectStatus = getRedirectStatus;\nexports.normalizeRouteRegex = normalizeRouteRegex;\nexports.modifyRouteRegex = modifyRouteRegex;\nexports.allowedStatusCodes = void 0;\nvar _chalk = _interopRequireDefault(__webpack_require__(/*! ./chalk */ \"./node_modules/next/dist/lib/chalk.js\"));\nvar _url = __webpack_require__(/*! url */ \"./node_modules/next/dist/compiled/native-url/index.js\");\nvar pathToRegexp = _interopRequireWildcard(__webpack_require__(/*! next/dist/compiled/path-to-regexp */ \"./node_modules/next/dist/compiled/path-to-regexp/index.js\"));\nvar _escapeRegexp = __webpack_require__(/*! ../shared/lib/escape-regexp */ \"./node_modules/next/dist/shared/lib/escape-regexp.js\");\nvar _constants = __webpack_require__(/*! ../shared/lib/constants */ \"./node_modules/next/dist/shared/lib/constants.js\");\nvar _isError = _interopRequireDefault(__webpack_require__(/*! ./is-error */ \"./node_modules/next/dist/lib/is-error.js\"));\nasync function loadCustomRoutes(config) {\n    const [headers, rewrites, redirects] = await Promise.all([\n        loadHeaders(config),\n        loadRewrites(config),\n        loadRedirects(config), \n    ]);\n    const totalRewrites = rewrites.beforeFiles.length + rewrites.afterFiles.length + rewrites.fallback.length;\n    const totalRoutes = headers.length + redirects.length + totalRewrites;\n    if (totalRoutes > 1000) {\n        console.warn(_chalk.default.bold.yellow(`Warning: `) + `total number of custom routes exceeds 1000, this can reduce performance. Route counts:\\n` + `headers: ${headers.length}\\n` + `rewrites: ${totalRewrites}\\n` + `redirects: ${redirects.length}\\n` + `See more info: https://nextjs.org/docs/messages/max-custom-routes-reached`);\n    }\n    if (config.trailingSlash) {\n        redirects.unshift({\n            source: '/:file((?!\\\\.well-known(?:/.*)?)(?:[^/]+/)*[^/]+\\\\.\\\\w+)/',\n            destination: '/:file',\n            permanent: true,\n            locale: config.i18n ? false : undefined,\n            internal: true\n        }, {\n            source: '/:notfile((?!\\\\.well-known(?:/.*)?)(?:[^/]+/)*[^/\\\\.]+)',\n            destination: '/:notfile/',\n            permanent: true,\n            locale: config.i18n ? false : undefined,\n            internal: true\n        });\n        if (config.basePath) {\n            redirects.unshift({\n                source: config.basePath,\n                destination: config.basePath + '/',\n                permanent: true,\n                basePath: false,\n                locale: config.i18n ? false : undefined,\n                internal: true\n            });\n        }\n    } else {\n        redirects.unshift({\n            source: '/:path+/',\n            destination: '/:path+',\n            permanent: true,\n            locale: config.i18n ? false : undefined,\n            internal: true\n        });\n        if (config.basePath) {\n            redirects.unshift({\n                source: config.basePath + '/',\n                destination: config.basePath,\n                permanent: true,\n                basePath: false,\n                locale: config.i18n ? false : undefined,\n                internal: true\n            });\n        }\n    }\n    return {\n        headers,\n        rewrites,\n        redirects\n    };\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n        return obj;\n    } else {\n        var newObj = {};\n        if (obj != null) {\n            for(var key in obj){\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n                    if (desc.get || desc.set) {\n                        Object.defineProperty(newObj, key, desc);\n                    } else {\n                        newObj[key] = obj[key];\n                    }\n                }\n            }\n        }\n        newObj.default = obj;\n        return newObj;\n    }\n}\nconst allowedStatusCodes = new Set([\n    301,\n    302,\n    303,\n    307,\n    308\n]);\nexports.allowedStatusCodes = allowedStatusCodes;\nconst allowedHasTypes = new Set([\n    'header',\n    'cookie',\n    'query',\n    'host'\n]);\nconst namedGroupsRegex = /\\(\\?<([a-zA-Z][a-zA-Z0-9]*)>/g;\nfunction getRedirectStatus(route) {\n    return route.statusCode || (route.permanent ? _constants.PERMANENT_REDIRECT_STATUS : _constants.TEMPORARY_REDIRECT_STATUS);\n}\nfunction normalizeRouteRegex(regex) {\n    // clean up un-necessary escaping from regex.source which turns / into \\\\/\n    return regex.replace(/\\\\\\//g, '/');\n}\nfunction modifyRouteRegex(regex, restrictedPaths) {\n    if (restrictedPaths) {\n        regex = regex.replace(/\\^/, `^(?!${restrictedPaths.map((path)=>path.replace(/\\//g, '\\\\/')\n        ).join('|')})`);\n    }\n    regex = regex.replace(/\\$$/, '(?:\\\\/)?$');\n    return regex;\n}\nfunction checkRedirect(route) {\n    const invalidParts = [];\n    let hadInvalidStatus = false;\n    if (route.statusCode && !allowedStatusCodes.has(route.statusCode)) {\n        hadInvalidStatus = true;\n        invalidParts.push(`\\`statusCode\\` is not undefined or valid statusCode`);\n    }\n    if (typeof route.permanent !== 'boolean' && !route.statusCode) {\n        invalidParts.push(`\\`permanent\\` is not set to \\`true\\` or \\`false\\``);\n    }\n    return {\n        invalidParts,\n        hadInvalidStatus\n    };\n}\nfunction checkHeader(route) {\n    const invalidParts = [];\n    if (!Array.isArray(route.headers)) {\n        invalidParts.push('`headers` field must be an array');\n    } else if (route.headers.length === 0) {\n        invalidParts.push('`headers` field cannot be empty');\n    } else {\n        for (const header of route.headers){\n            if (!header || typeof header !== 'object') {\n                invalidParts.push(\"`headers` items must be object with { key: '', value: '' }\");\n                break;\n            }\n            if (typeof header.key !== 'string') {\n                invalidParts.push('`key` in header item must be string');\n                break;\n            }\n            if (typeof header.value !== 'string') {\n                invalidParts.push('`value` in header item must be string');\n                break;\n            }\n        }\n    }\n    return invalidParts;\n}\nfunction tryParsePath(route, handleUrl) {\n    const result = {};\n    let routePath = route;\n    try {\n        if (handleUrl) {\n            const parsedDestination = (0, _url).parse(route, true);\n            routePath = `${parsedDestination.pathname}${parsedDestination.hash || ''}`;\n        }\n        // Make sure we can parse the source properly\n        result.tokens = pathToRegexp.parse(routePath);\n        const regex = pathToRegexp.tokensToRegexp(result.tokens);\n        result.regexStr = regex.source;\n    } catch (err) {\n        // If there is an error show our error link but still show original error or a formatted one if we can\n        let errMatches;\n        if ((0, _isError).default(err) && (errMatches = err.message.match(/at (\\d{0,})/))) {\n            const position = parseInt(errMatches[1], 10);\n            console.error(`\\nError parsing \\`${route}\\` ` + `https://nextjs.org/docs/messages/invalid-route-source\\n` + `Reason: ${err.message}\\n\\n` + `  ${routePath}\\n` + `  ${new Array(position).fill(' ').join('')}^\\n`);\n        } else {\n            console.error(`\\nError parsing ${route} https://nextjs.org/docs/messages/invalid-route-source`, err);\n        }\n        result.error = true;\n    }\n    return result;\n}\nfunction checkCustomRoutes(routes, type) {\n    if (!Array.isArray(routes)) {\n        console.error(`Error: ${type}s must return an array, received ${typeof routes}.\\n` + `See here for more info: https://nextjs.org/docs/messages/routes-must-be-array`);\n        process.exit(1);\n    }\n    let numInvalidRoutes = 0;\n    let hadInvalidStatus = false;\n    let hadInvalidHas = false;\n    const allowedKeys = new Set([\n        'source',\n        'basePath',\n        'locale',\n        'has'\n    ]);\n    if (type === 'rewrite') {\n        allowedKeys.add('destination');\n    }\n    if (type === 'redirect') {\n        allowedKeys.add('statusCode');\n        allowedKeys.add('permanent');\n        allowedKeys.add('destination');\n    }\n    if (type === 'header') {\n        allowedKeys.add('headers');\n    }\n    for (const route of routes){\n        if (!route || typeof route !== 'object') {\n            console.error(`The route ${JSON.stringify(route)} is not a valid object with \\`source\\` and \\`${type === 'header' ? 'headers' : 'destination'}\\``);\n            numInvalidRoutes++;\n            continue;\n        }\n        if (type === 'rewrite' && route.basePath === false && !(route.destination.startsWith('http://') || route.destination.startsWith('https://'))) {\n            console.error(`The route ${route.source} rewrites urls outside of the basePath. Please use a destination that starts with \\`http://\\` or \\`https://\\` https://nextjs.org/docs/messages/invalid-external-rewrite`);\n            numInvalidRoutes++;\n            continue;\n        }\n        const keys = Object.keys(route);\n        const invalidKeys = keys.filter((key)=>!allowedKeys.has(key)\n        );\n        const invalidParts = [];\n        if (typeof route.basePath !== 'undefined' && route.basePath !== false) {\n            invalidParts.push('`basePath` must be undefined or false');\n        }\n        if (typeof route.locale !== 'undefined' && route.locale !== false) {\n            invalidParts.push('`locale` must be undefined or false');\n        }\n        if (typeof route.has !== 'undefined' && !Array.isArray(route.has)) {\n            invalidParts.push('`has` must be undefined or valid has object');\n            hadInvalidHas = true;\n        } else if (route.has) {\n            const invalidHasItems = [];\n            for (const hasItem of route.has){\n                let invalidHasParts = [];\n                if (!allowedHasTypes.has(hasItem.type)) {\n                    invalidHasParts.push(`invalid type \"${hasItem.type}\"`);\n                }\n                if (typeof hasItem.key !== 'string' && hasItem.type !== 'host') {\n                    invalidHasParts.push(`invalid key \"${hasItem.key}\"`);\n                }\n                if (typeof hasItem.value !== 'undefined' && typeof hasItem.value !== 'string') {\n                    invalidHasParts.push(`invalid value \"${hasItem.value}\"`);\n                }\n                if (typeof hasItem.value === 'undefined' && hasItem.type === 'host') {\n                    invalidHasParts.push(`value is required for \"host\" type`);\n                }\n                if (invalidHasParts.length > 0) {\n                    invalidHasItems.push(`${invalidHasParts.join(', ')} for ${JSON.stringify(hasItem)}`);\n                }\n            }\n            if (invalidHasItems.length > 0) {\n                hadInvalidHas = true;\n                const itemStr = `item${invalidHasItems.length === 1 ? '' : 's'}`;\n                console.error(`Invalid \\`has\\` ${itemStr}:\\n` + invalidHasItems.join('\\n'));\n                console.error();\n                invalidParts.push(`invalid \\`has\\` ${itemStr} found`);\n            }\n        }\n        if (!route.source) {\n            invalidParts.push('`source` is missing');\n        } else if (typeof route.source !== 'string') {\n            invalidParts.push('`source` is not a string');\n        } else if (!route.source.startsWith('/')) {\n            invalidParts.push('`source` does not start with /');\n        }\n        if (type === 'header') {\n            invalidParts.push(...checkHeader(route));\n        } else {\n            let _route = route;\n            if (!_route.destination) {\n                invalidParts.push('`destination` is missing');\n            } else if (typeof _route.destination !== 'string') {\n                invalidParts.push('`destination` is not a string');\n            } else if (type === 'rewrite' && !_route.destination.match(/^(\\/|https:\\/\\/|http:\\/\\/)/)) {\n                invalidParts.push('`destination` does not start with `/`, `http://`, or `https://`');\n            }\n        }\n        if (type === 'redirect') {\n            const result = checkRedirect(route);\n            hadInvalidStatus = hadInvalidStatus || result.hadInvalidStatus;\n            invalidParts.push(...result.invalidParts);\n        }\n        let sourceTokens;\n        if (typeof route.source === 'string' && route.source.startsWith('/')) {\n            // only show parse error if we didn't already show error\n            // for not being a string\n            const { tokens , error , regexStr  } = tryParsePath(route.source);\n            if (error) {\n                invalidParts.push('`source` parse failed');\n            }\n            if (regexStr && regexStr.length > 4096) {\n                invalidParts.push('`source` exceeds max built length of 4096');\n            }\n            sourceTokens = tokens;\n        }\n        const hasSegments = new Set();\n        if (route.has) {\n            for (const hasItem of route.has){\n                if (!hasItem.value && hasItem.key) {\n                    hasSegments.add(hasItem.key);\n                }\n                if (hasItem.value) {\n                    for (const match of hasItem.value.matchAll(namedGroupsRegex)){\n                        if (match[1]) {\n                            hasSegments.add(match[1]);\n                        }\n                    }\n                    if (hasItem.type === 'host') {\n                        hasSegments.add('host');\n                    }\n                }\n            }\n        }\n        // make sure no unnamed patterns are attempted to be used in the\n        // destination as this can cause confusion and is not allowed\n        if (typeof route.destination === 'string') {\n            if (route.destination.startsWith('/') && Array.isArray(sourceTokens)) {\n                const unnamedInDest = new Set();\n                for (const token of sourceTokens){\n                    if (typeof token === 'object' && typeof token.name === 'number') {\n                        const unnamedIndex = new RegExp(`:${token.name}(?!\\\\d)`);\n                        if (route.destination.match(unnamedIndex)) {\n                            unnamedInDest.add(`:${token.name}`);\n                        }\n                    }\n                }\n                if (unnamedInDest.size > 0) {\n                    invalidParts.push(`\\`destination\\` has unnamed params ${[\n                        ...unnamedInDest\n                    ].join(', ')}`);\n                } else {\n                    const { tokens: destTokens , regexStr: destRegexStr , error: destinationParseFailed ,  } = tryParsePath(route.destination, true);\n                    if (destRegexStr && destRegexStr.length > 4096) {\n                        invalidParts.push('`destination` exceeds max built length of 4096');\n                    }\n                    if (destinationParseFailed) {\n                        invalidParts.push('`destination` parse failed');\n                    } else {\n                        const sourceSegments = new Set(sourceTokens.map((item)=>typeof item === 'object' && item.name\n                        ).filter(Boolean));\n                        const invalidDestSegments = new Set();\n                        for (const token of destTokens){\n                            if (typeof token === 'object' && !sourceSegments.has(token.name) && !hasSegments.has(token.name)) {\n                                invalidDestSegments.add(token.name);\n                            }\n                        }\n                        if (invalidDestSegments.size) {\n                            invalidParts.push(`\\`destination\\` has segments not in \\`source\\` or \\`has\\` (${[\n                                ...invalidDestSegments, \n                            ].join(', ')})`);\n                        }\n                    }\n                }\n            }\n        }\n        const hasInvalidKeys = invalidKeys.length > 0;\n        const hasInvalidParts = invalidParts.length > 0;\n        if (hasInvalidKeys || hasInvalidParts) {\n            console.error(`${invalidParts.join(', ')}${invalidKeys.length ? (hasInvalidParts ? ',' : '') + ` invalid field${invalidKeys.length === 1 ? '' : 's'}: ` + invalidKeys.join(',') : ''} for route ${JSON.stringify(route)}`);\n            console.error();\n            numInvalidRoutes++;\n        }\n    }\n    if (numInvalidRoutes > 0) {\n        if (hadInvalidStatus) {\n            console.error(`\\nValid redirect statusCode values are ${[\n                ...allowedStatusCodes\n            ].join(', ')}`);\n        }\n        if (hadInvalidHas) {\n            console.error(`\\nValid \\`has\\` object shape is ${JSON.stringify({\n                type: [\n                    ...allowedHasTypes\n                ].join(', '),\n                key: 'the key to check for',\n                value: 'undefined or a value string to match against'\n            }, null, 2)}`);\n        }\n        console.error();\n        console.error(`Error: Invalid ${type}${numInvalidRoutes === 1 ? '' : 's'} found`);\n        process.exit(1);\n    }\n}\nfunction processRoutes(routes, config, type) {\n    const _routes = routes;\n    const newRoutes = [];\n    const defaultLocales = [];\n    if (config.i18n && type === 'redirect') {\n        var ref;\n        for (const item of ((ref = config.i18n) === null || ref === void 0 ? void 0 : ref.domains) || []){\n            defaultLocales.push({\n                locale: item.defaultLocale,\n                base: `http${item.http ? '' : 's'}://${item.domain}`\n            });\n        }\n        defaultLocales.push({\n            locale: config.i18n.defaultLocale,\n            base: ''\n        });\n    }\n    for (const r of _routes){\n        var ref1;\n        const srcBasePath = config.basePath && r.basePath !== false ? config.basePath : '';\n        const isExternal = !((ref1 = r.destination) === null || ref1 === void 0 ? void 0 : ref1.startsWith('/'));\n        const destBasePath = srcBasePath && !isExternal ? srcBasePath : '';\n        if (config.i18n && r.locale !== false) {\n            var ref2;\n            if (!isExternal) {\n                defaultLocales.forEach((item)=>{\n                    let destination;\n                    if (r.destination) {\n                        destination = item.base ? `${item.base}${destBasePath}${r.destination}` : `${destBasePath}${r.destination}`;\n                    }\n                    newRoutes.push({\n                        ...r,\n                        destination,\n                        source: `${srcBasePath}/${item.locale}${r.source}`\n                    });\n                });\n            }\n            r.source = `/:nextInternalLocale(${config.i18n.locales.map((locale)=>(0, _escapeRegexp).escapeStringRegexp(locale)\n            ).join('|')})${r.source === '/' && !config.trailingSlash ? '' : r.source}`;\n            if (r.destination && ((ref2 = r.destination) === null || ref2 === void 0 ? void 0 : ref2.startsWith('/'))) {\n                r.destination = `/:nextInternalLocale${r.destination === '/' && !config.trailingSlash ? '' : r.destination}`;\n            }\n        }\n        r.source = `${srcBasePath}${r.source === '/' && srcBasePath ? '' : r.source}`;\n        if (r.destination) {\n            r.destination = `${destBasePath}${r.destination === '/' && destBasePath ? '' : r.destination}`;\n        }\n        newRoutes.push(r);\n    }\n    return newRoutes;\n}\nasync function loadRedirects(config) {\n    if (typeof config.redirects !== 'function') {\n        return [];\n    }\n    let redirects = await config.redirects();\n    // check before we process the routes and after to ensure\n    // they are still valid\n    checkCustomRoutes(redirects, 'redirect');\n    redirects = processRoutes(redirects, config, 'redirect');\n    checkCustomRoutes(redirects, 'redirect');\n    return redirects;\n}\nasync function loadRewrites(config) {\n    if (typeof config.rewrites !== 'function') {\n        return {\n            beforeFiles: [],\n            afterFiles: [],\n            fallback: []\n        };\n    }\n    const _rewrites = await config.rewrites();\n    let beforeFiles = [];\n    let afterFiles = [];\n    let fallback = [];\n    if (!Array.isArray(_rewrites) && typeof _rewrites === 'object' && Object.keys(_rewrites).every((key)=>key === 'beforeFiles' || key === 'afterFiles' || key === 'fallback'\n    )) {\n        beforeFiles = _rewrites.beforeFiles || [];\n        afterFiles = _rewrites.afterFiles || [];\n        fallback = _rewrites.fallback || [];\n    } else {\n        afterFiles = _rewrites;\n    }\n    // check before we process the routes and after to ensure\n    // they are still valid\n    checkCustomRoutes(beforeFiles, 'rewrite');\n    checkCustomRoutes(afterFiles, 'rewrite');\n    checkCustomRoutes(fallback, 'rewrite');\n    beforeFiles = processRoutes(beforeFiles, config, 'rewrite');\n    afterFiles = processRoutes(afterFiles, config, 'rewrite');\n    fallback = processRoutes(fallback, config, 'rewrite');\n    checkCustomRoutes(beforeFiles, 'rewrite');\n    checkCustomRoutes(afterFiles, 'rewrite');\n    checkCustomRoutes(fallback, 'rewrite');\n    return {\n        beforeFiles,\n        afterFiles,\n        fallback\n    };\n}\nasync function loadHeaders(config) {\n    if (typeof config.headers !== 'function') {\n        return [];\n    }\n    let headers = await config.headers();\n    // check before we process the routes and after to ensure\n    // they are still valid\n    checkCustomRoutes(headers, 'header');\n    headers = processRoutes(headers, config, 'header');\n    checkCustomRoutes(headers, 'header');\n    return headers;\n}\n\n//# sourceMappingURL=load-custom-routes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2xpYi9sb2FkLWN1c3RvbS1yb3V0ZXMuanMuanMiLCJtYXBwaW5ncyI6IjtBQUFhO0FBQ2IsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZix5QkFBeUI7QUFDekIsMkJBQTJCO0FBQzNCLHdCQUF3QjtBQUN4QiwwQkFBMEI7QUFDMUIsb0NBQW9DLG1CQUFPLENBQUMsc0RBQVM7QUFDckQsV0FBVyxtQkFBTyxDQUFDLGtFQUFLO0FBQ3hCLDJDQUEyQyxtQkFBTyxDQUFDLG9HQUFtQztBQUN0RixvQkFBb0IsbUJBQU8sQ0FBQyx5RkFBNkI7QUFDekQsaUJBQWlCLG1CQUFPLENBQUMsaUZBQXlCO0FBQ2xELHNDQUFzQyxtQkFBTyxDQUFDLDREQUFZO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdLQUF3SyxlQUFlLG1CQUFtQixjQUFjLG9CQUFvQixpQkFBaUI7QUFDN1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkM7QUFDM0Msb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLHlFQUF5RSxvQkFBb0I7QUFDN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQiwyQkFBMkIsRUFBRSw2QkFBNkI7QUFDckY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0Esa0ZBQWtGLEdBQUc7QUFDckY7QUFDQSwrQ0FBK0MsTUFBTSw4RUFBOEUsWUFBWSxhQUFhLFVBQVUsV0FBVyx1Q0FBdUM7QUFDeE4sVUFBVTtBQUNWLDZDQUE2QyxPQUFPO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLEtBQUssbUNBQW1DLGNBQWM7QUFDdEYsUUFBUSxPQUFPO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1Qyx1QkFBdUIsOENBQThDLDhDQUE4QztBQUMxSjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxjQUFjO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMERBQTBELGFBQWE7QUFDdkU7QUFDQTtBQUNBLHlEQUF5RCxZQUFZO0FBQ3JFO0FBQ0E7QUFDQSwyREFBMkQsY0FBYztBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLDRCQUE0QixNQUFNLHdCQUF3QjtBQUN0RztBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1Qyx3Q0FBd0M7QUFDL0UsaURBQWlELFFBQVE7QUFDekQ7QUFDQSxxREFBcUQsU0FBUztBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDZCQUE2QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQsV0FBVztBQUN2RTtBQUNBLGtEQUFrRCxXQUFXO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEVBQTRFO0FBQzVFO0FBQ0EsaUNBQWlDO0FBQ2pDLGtCQUFrQjtBQUNsQiw0QkFBNEIsaUZBQWlGO0FBQzdHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEdBQTRHO0FBQzVHO0FBQ0EseUNBQXlDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsd0JBQXdCLEVBQUUscUVBQXFFLG9DQUFvQyxrQ0FBa0MsWUFBWSxzQkFBc0I7QUFDcE87QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0VBQW9FO0FBQ3BFO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQSw2REFBNkQ7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsV0FBVztBQUN4QjtBQUNBO0FBQ0Esd0NBQXdDLEtBQUssRUFBRSxtQ0FBbUM7QUFDbEYsUUFBUSxPQUFPO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixxQkFBcUIsS0FBSyxZQUFZO0FBQ25FLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQsVUFBVSxFQUFFLGFBQWEsRUFBRSxjQUFjLE9BQU8sYUFBYSxFQUFFLGNBQWM7QUFDbEk7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsWUFBWSxHQUFHLFlBQVksRUFBRSxTQUFTO0FBQ3pFLHFCQUFxQjtBQUNyQixpQkFBaUI7QUFDakI7QUFDQSwrQ0FBK0M7QUFDL0Msd0JBQXdCLEdBQUcsMERBQTBEO0FBQ3JGO0FBQ0EsdURBQXVELG9FQUFvRTtBQUMzSDtBQUNBO0FBQ0Esc0JBQXNCLFlBQVksRUFBRSxnREFBZ0Q7QUFDcEY7QUFDQSwrQkFBK0IsYUFBYSxFQUFFLDJEQUEyRDtBQUN6RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2xpYi9sb2FkLWN1c3RvbS1yb3V0ZXMuanM/YzQ5NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGxvYWRDdXN0b21Sb3V0ZXM7XG5leHBvcnRzLmdldFJlZGlyZWN0U3RhdHVzID0gZ2V0UmVkaXJlY3RTdGF0dXM7XG5leHBvcnRzLm5vcm1hbGl6ZVJvdXRlUmVnZXggPSBub3JtYWxpemVSb3V0ZVJlZ2V4O1xuZXhwb3J0cy5tb2RpZnlSb3V0ZVJlZ2V4ID0gbW9kaWZ5Um91dGVSZWdleDtcbmV4cG9ydHMuYWxsb3dlZFN0YXR1c0NvZGVzID0gdm9pZCAwO1xudmFyIF9jaGFsayA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vY2hhbGtcIikpO1xudmFyIF91cmwgPSByZXF1aXJlKFwidXJsXCIpO1xudmFyIHBhdGhUb1JlZ2V4cCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoXCJuZXh0L2Rpc3QvY29tcGlsZWQvcGF0aC10by1yZWdleHBcIikpO1xudmFyIF9lc2NhcGVSZWdleHAgPSByZXF1aXJlKFwiLi4vc2hhcmVkL2xpYi9lc2NhcGUtcmVnZXhwXCIpO1xudmFyIF9jb25zdGFudHMgPSByZXF1aXJlKFwiLi4vc2hhcmVkL2xpYi9jb25zdGFudHNcIik7XG52YXIgX2lzRXJyb3IgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2lzLWVycm9yXCIpKTtcbmFzeW5jIGZ1bmN0aW9uIGxvYWRDdXN0b21Sb3V0ZXMoY29uZmlnKSB7XG4gICAgY29uc3QgW2hlYWRlcnMsIHJld3JpdGVzLCByZWRpcmVjdHNdID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgICAgICBsb2FkSGVhZGVycyhjb25maWcpLFxuICAgICAgICBsb2FkUmV3cml0ZXMoY29uZmlnKSxcbiAgICAgICAgbG9hZFJlZGlyZWN0cyhjb25maWcpLCBcbiAgICBdKTtcbiAgICBjb25zdCB0b3RhbFJld3JpdGVzID0gcmV3cml0ZXMuYmVmb3JlRmlsZXMubGVuZ3RoICsgcmV3cml0ZXMuYWZ0ZXJGaWxlcy5sZW5ndGggKyByZXdyaXRlcy5mYWxsYmFjay5sZW5ndGg7XG4gICAgY29uc3QgdG90YWxSb3V0ZXMgPSBoZWFkZXJzLmxlbmd0aCArIHJlZGlyZWN0cy5sZW5ndGggKyB0b3RhbFJld3JpdGVzO1xuICAgIGlmICh0b3RhbFJvdXRlcyA+IDEwMDApIHtcbiAgICAgICAgY29uc29sZS53YXJuKF9jaGFsay5kZWZhdWx0LmJvbGQueWVsbG93KGBXYXJuaW5nOiBgKSArIGB0b3RhbCBudW1iZXIgb2YgY3VzdG9tIHJvdXRlcyBleGNlZWRzIDEwMDAsIHRoaXMgY2FuIHJlZHVjZSBwZXJmb3JtYW5jZS4gUm91dGUgY291bnRzOlxcbmAgKyBgaGVhZGVyczogJHtoZWFkZXJzLmxlbmd0aH1cXG5gICsgYHJld3JpdGVzOiAke3RvdGFsUmV3cml0ZXN9XFxuYCArIGByZWRpcmVjdHM6ICR7cmVkaXJlY3RzLmxlbmd0aH1cXG5gICsgYFNlZSBtb3JlIGluZm86IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL21heC1jdXN0b20tcm91dGVzLXJlYWNoZWRgKTtcbiAgICB9XG4gICAgaWYgKGNvbmZpZy50cmFpbGluZ1NsYXNoKSB7XG4gICAgICAgIHJlZGlyZWN0cy51bnNoaWZ0KHtcbiAgICAgICAgICAgIHNvdXJjZTogJy86ZmlsZSgoPyFcXFxcLndlbGwta25vd24oPzovLiopPykoPzpbXi9dKy8pKlteL10rXFxcXC5cXFxcdyspLycsXG4gICAgICAgICAgICBkZXN0aW5hdGlvbjogJy86ZmlsZScsXG4gICAgICAgICAgICBwZXJtYW5lbnQ6IHRydWUsXG4gICAgICAgICAgICBsb2NhbGU6IGNvbmZpZy5pMThuID8gZmFsc2UgOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBpbnRlcm5hbDogdHJ1ZVxuICAgICAgICB9LCB7XG4gICAgICAgICAgICBzb3VyY2U6ICcvOm5vdGZpbGUoKD8hXFxcXC53ZWxsLWtub3duKD86Ly4qKT8pKD86W14vXSsvKSpbXi9cXFxcLl0rKScsXG4gICAgICAgICAgICBkZXN0aW5hdGlvbjogJy86bm90ZmlsZS8nLFxuICAgICAgICAgICAgcGVybWFuZW50OiB0cnVlLFxuICAgICAgICAgICAgbG9jYWxlOiBjb25maWcuaTE4biA/IGZhbHNlIDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgaW50ZXJuYWw6IHRydWVcbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChjb25maWcuYmFzZVBhdGgpIHtcbiAgICAgICAgICAgIHJlZGlyZWN0cy51bnNoaWZ0KHtcbiAgICAgICAgICAgICAgICBzb3VyY2U6IGNvbmZpZy5iYXNlUGF0aCxcbiAgICAgICAgICAgICAgICBkZXN0aW5hdGlvbjogY29uZmlnLmJhc2VQYXRoICsgJy8nLFxuICAgICAgICAgICAgICAgIHBlcm1hbmVudDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBiYXNlUGF0aDogZmFsc2UsXG4gICAgICAgICAgICAgICAgbG9jYWxlOiBjb25maWcuaTE4biA/IGZhbHNlIDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgIGludGVybmFsOiB0cnVlXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAgIHJlZGlyZWN0cy51bnNoaWZ0KHtcbiAgICAgICAgICAgIHNvdXJjZTogJy86cGF0aCsvJyxcbiAgICAgICAgICAgIGRlc3RpbmF0aW9uOiAnLzpwYXRoKycsXG4gICAgICAgICAgICBwZXJtYW5lbnQ6IHRydWUsXG4gICAgICAgICAgICBsb2NhbGU6IGNvbmZpZy5pMThuID8gZmFsc2UgOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBpbnRlcm5hbDogdHJ1ZVxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKGNvbmZpZy5iYXNlUGF0aCkge1xuICAgICAgICAgICAgcmVkaXJlY3RzLnVuc2hpZnQoe1xuICAgICAgICAgICAgICAgIHNvdXJjZTogY29uZmlnLmJhc2VQYXRoICsgJy8nLFxuICAgICAgICAgICAgICAgIGRlc3RpbmF0aW9uOiBjb25maWcuYmFzZVBhdGgsXG4gICAgICAgICAgICAgICAgcGVybWFuZW50OiB0cnVlLFxuICAgICAgICAgICAgICAgIGJhc2VQYXRoOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBsb2NhbGU6IGNvbmZpZy5pMThuID8gZmFsc2UgOiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgaW50ZXJuYWw6IHRydWVcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIGhlYWRlcnMsXG4gICAgICAgIHJld3JpdGVzLFxuICAgICAgICByZWRpcmVjdHNcbiAgICB9O1xufVxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDoge1xuICAgICAgICBkZWZhdWx0OiBvYmpcbiAgICB9O1xufVxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQob2JqKSB7XG4gICAgaWYgKG9iaiAmJiBvYmouX19lc01vZHVsZSkge1xuICAgICAgICByZXR1cm4gb2JqO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciBuZXdPYmogPSB7fTtcbiAgICAgICAgaWYgKG9iaiAhPSBudWxsKSB7XG4gICAgICAgICAgICBmb3IodmFyIGtleSBpbiBvYmope1xuICAgICAgICAgICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBkZXNjID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KSA6IHt9O1xuICAgICAgICAgICAgICAgICAgICBpZiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdPYmpba2V5XSA9IG9ialtrZXldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIG5ld09iai5kZWZhdWx0ID0gb2JqO1xuICAgICAgICByZXR1cm4gbmV3T2JqO1xuICAgIH1cbn1cbmNvbnN0IGFsbG93ZWRTdGF0dXNDb2RlcyA9IG5ldyBTZXQoW1xuICAgIDMwMSxcbiAgICAzMDIsXG4gICAgMzAzLFxuICAgIDMwNyxcbiAgICAzMDhcbl0pO1xuZXhwb3J0cy5hbGxvd2VkU3RhdHVzQ29kZXMgPSBhbGxvd2VkU3RhdHVzQ29kZXM7XG5jb25zdCBhbGxvd2VkSGFzVHlwZXMgPSBuZXcgU2V0KFtcbiAgICAnaGVhZGVyJyxcbiAgICAnY29va2llJyxcbiAgICAncXVlcnknLFxuICAgICdob3N0J1xuXSk7XG5jb25zdCBuYW1lZEdyb3Vwc1JlZ2V4ID0gL1xcKFxcPzwoW2EtekEtWl1bYS16QS1aMC05XSopPi9nO1xuZnVuY3Rpb24gZ2V0UmVkaXJlY3RTdGF0dXMocm91dGUpIHtcbiAgICByZXR1cm4gcm91dGUuc3RhdHVzQ29kZSB8fCAocm91dGUucGVybWFuZW50ID8gX2NvbnN0YW50cy5QRVJNQU5FTlRfUkVESVJFQ1RfU1RBVFVTIDogX2NvbnN0YW50cy5URU1QT1JBUllfUkVESVJFQ1RfU1RBVFVTKTtcbn1cbmZ1bmN0aW9uIG5vcm1hbGl6ZVJvdXRlUmVnZXgocmVnZXgpIHtcbiAgICAvLyBjbGVhbiB1cCB1bi1uZWNlc3NhcnkgZXNjYXBpbmcgZnJvbSByZWdleC5zb3VyY2Ugd2hpY2ggdHVybnMgLyBpbnRvIFxcXFwvXG4gICAgcmV0dXJuIHJlZ2V4LnJlcGxhY2UoL1xcXFxcXC8vZywgJy8nKTtcbn1cbmZ1bmN0aW9uIG1vZGlmeVJvdXRlUmVnZXgocmVnZXgsIHJlc3RyaWN0ZWRQYXRocykge1xuICAgIGlmIChyZXN0cmljdGVkUGF0aHMpIHtcbiAgICAgICAgcmVnZXggPSByZWdleC5yZXBsYWNlKC9cXF4vLCBgXig/ISR7cmVzdHJpY3RlZFBhdGhzLm1hcCgocGF0aCk9PnBhdGgucmVwbGFjZSgvXFwvL2csICdcXFxcLycpXG4gICAgICAgICkuam9pbignfCcpfSlgKTtcbiAgICB9XG4gICAgcmVnZXggPSByZWdleC5yZXBsYWNlKC9cXCQkLywgJyg/OlxcXFwvKT8kJyk7XG4gICAgcmV0dXJuIHJlZ2V4O1xufVxuZnVuY3Rpb24gY2hlY2tSZWRpcmVjdChyb3V0ZSkge1xuICAgIGNvbnN0IGludmFsaWRQYXJ0cyA9IFtdO1xuICAgIGxldCBoYWRJbnZhbGlkU3RhdHVzID0gZmFsc2U7XG4gICAgaWYgKHJvdXRlLnN0YXR1c0NvZGUgJiYgIWFsbG93ZWRTdGF0dXNDb2Rlcy5oYXMocm91dGUuc3RhdHVzQ29kZSkpIHtcbiAgICAgICAgaGFkSW52YWxpZFN0YXR1cyA9IHRydWU7XG4gICAgICAgIGludmFsaWRQYXJ0cy5wdXNoKGBcXGBzdGF0dXNDb2RlXFxgIGlzIG5vdCB1bmRlZmluZWQgb3IgdmFsaWQgc3RhdHVzQ29kZWApO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHJvdXRlLnBlcm1hbmVudCAhPT0gJ2Jvb2xlYW4nICYmICFyb3V0ZS5zdGF0dXNDb2RlKSB7XG4gICAgICAgIGludmFsaWRQYXJ0cy5wdXNoKGBcXGBwZXJtYW5lbnRcXGAgaXMgbm90IHNldCB0byBcXGB0cnVlXFxgIG9yIFxcYGZhbHNlXFxgYCk7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIGludmFsaWRQYXJ0cyxcbiAgICAgICAgaGFkSW52YWxpZFN0YXR1c1xuICAgIH07XG59XG5mdW5jdGlvbiBjaGVja0hlYWRlcihyb3V0ZSkge1xuICAgIGNvbnN0IGludmFsaWRQYXJ0cyA9IFtdO1xuICAgIGlmICghQXJyYXkuaXNBcnJheShyb3V0ZS5oZWFkZXJzKSkge1xuICAgICAgICBpbnZhbGlkUGFydHMucHVzaCgnYGhlYWRlcnNgIGZpZWxkIG11c3QgYmUgYW4gYXJyYXknKTtcbiAgICB9IGVsc2UgaWYgKHJvdXRlLmhlYWRlcnMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIGludmFsaWRQYXJ0cy5wdXNoKCdgaGVhZGVyc2AgZmllbGQgY2Fubm90IGJlIGVtcHR5Jyk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgZm9yIChjb25zdCBoZWFkZXIgb2Ygcm91dGUuaGVhZGVycyl7XG4gICAgICAgICAgICBpZiAoIWhlYWRlciB8fCB0eXBlb2YgaGVhZGVyICE9PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgICAgIGludmFsaWRQYXJ0cy5wdXNoKFwiYGhlYWRlcnNgIGl0ZW1zIG11c3QgYmUgb2JqZWN0IHdpdGggeyBrZXk6ICcnLCB2YWx1ZTogJycgfVwiKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0eXBlb2YgaGVhZGVyLmtleSAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICBpbnZhbGlkUGFydHMucHVzaCgnYGtleWAgaW4gaGVhZGVyIGl0ZW0gbXVzdCBiZSBzdHJpbmcnKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0eXBlb2YgaGVhZGVyLnZhbHVlICE9PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgIGludmFsaWRQYXJ0cy5wdXNoKCdgdmFsdWVgIGluIGhlYWRlciBpdGVtIG11c3QgYmUgc3RyaW5nJyk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGludmFsaWRQYXJ0cztcbn1cbmZ1bmN0aW9uIHRyeVBhcnNlUGF0aChyb3V0ZSwgaGFuZGxlVXJsKSB7XG4gICAgY29uc3QgcmVzdWx0ID0ge307XG4gICAgbGV0IHJvdXRlUGF0aCA9IHJvdXRlO1xuICAgIHRyeSB7XG4gICAgICAgIGlmIChoYW5kbGVVcmwpIHtcbiAgICAgICAgICAgIGNvbnN0IHBhcnNlZERlc3RpbmF0aW9uID0gKDAsIF91cmwpLnBhcnNlKHJvdXRlLCB0cnVlKTtcbiAgICAgICAgICAgIHJvdXRlUGF0aCA9IGAke3BhcnNlZERlc3RpbmF0aW9uLnBhdGhuYW1lfSR7cGFyc2VkRGVzdGluYXRpb24uaGFzaCB8fCAnJ31gO1xuICAgICAgICB9XG4gICAgICAgIC8vIE1ha2Ugc3VyZSB3ZSBjYW4gcGFyc2UgdGhlIHNvdXJjZSBwcm9wZXJseVxuICAgICAgICByZXN1bHQudG9rZW5zID0gcGF0aFRvUmVnZXhwLnBhcnNlKHJvdXRlUGF0aCk7XG4gICAgICAgIGNvbnN0IHJlZ2V4ID0gcGF0aFRvUmVnZXhwLnRva2Vuc1RvUmVnZXhwKHJlc3VsdC50b2tlbnMpO1xuICAgICAgICByZXN1bHQucmVnZXhTdHIgPSByZWdleC5zb3VyY2U7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIC8vIElmIHRoZXJlIGlzIGFuIGVycm9yIHNob3cgb3VyIGVycm9yIGxpbmsgYnV0IHN0aWxsIHNob3cgb3JpZ2luYWwgZXJyb3Igb3IgYSBmb3JtYXR0ZWQgb25lIGlmIHdlIGNhblxuICAgICAgICBsZXQgZXJyTWF0Y2hlcztcbiAgICAgICAgaWYgKCgwLCBfaXNFcnJvcikuZGVmYXVsdChlcnIpICYmIChlcnJNYXRjaGVzID0gZXJyLm1lc3NhZ2UubWF0Y2goL2F0IChcXGR7MCx9KS8pKSkge1xuICAgICAgICAgICAgY29uc3QgcG9zaXRpb24gPSBwYXJzZUludChlcnJNYXRjaGVzWzFdLCAxMCk7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGBcXG5FcnJvciBwYXJzaW5nIFxcYCR7cm91dGV9XFxgIGAgKyBgaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvaW52YWxpZC1yb3V0ZS1zb3VyY2VcXG5gICsgYFJlYXNvbjogJHtlcnIubWVzc2FnZX1cXG5cXG5gICsgYCAgJHtyb3V0ZVBhdGh9XFxuYCArIGAgICR7bmV3IEFycmF5KHBvc2l0aW9uKS5maWxsKCcgJykuam9pbignJyl9XlxcbmApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihgXFxuRXJyb3IgcGFyc2luZyAke3JvdXRlfSBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9pbnZhbGlkLXJvdXRlLXNvdXJjZWAsIGVycik7XG4gICAgICAgIH1cbiAgICAgICAgcmVzdWx0LmVycm9yID0gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIGNoZWNrQ3VzdG9tUm91dGVzKHJvdXRlcywgdHlwZSkge1xuICAgIGlmICghQXJyYXkuaXNBcnJheShyb3V0ZXMpKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoYEVycm9yOiAke3R5cGV9cyBtdXN0IHJldHVybiBhbiBhcnJheSwgcmVjZWl2ZWQgJHt0eXBlb2Ygcm91dGVzfS5cXG5gICsgYFNlZSBoZXJlIGZvciBtb3JlIGluZm86IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL3JvdXRlcy1tdXN0LWJlLWFycmF5YCk7XG4gICAgICAgIHByb2Nlc3MuZXhpdCgxKTtcbiAgICB9XG4gICAgbGV0IG51bUludmFsaWRSb3V0ZXMgPSAwO1xuICAgIGxldCBoYWRJbnZhbGlkU3RhdHVzID0gZmFsc2U7XG4gICAgbGV0IGhhZEludmFsaWRIYXMgPSBmYWxzZTtcbiAgICBjb25zdCBhbGxvd2VkS2V5cyA9IG5ldyBTZXQoW1xuICAgICAgICAnc291cmNlJyxcbiAgICAgICAgJ2Jhc2VQYXRoJyxcbiAgICAgICAgJ2xvY2FsZScsXG4gICAgICAgICdoYXMnXG4gICAgXSk7XG4gICAgaWYgKHR5cGUgPT09ICdyZXdyaXRlJykge1xuICAgICAgICBhbGxvd2VkS2V5cy5hZGQoJ2Rlc3RpbmF0aW9uJyk7XG4gICAgfVxuICAgIGlmICh0eXBlID09PSAncmVkaXJlY3QnKSB7XG4gICAgICAgIGFsbG93ZWRLZXlzLmFkZCgnc3RhdHVzQ29kZScpO1xuICAgICAgICBhbGxvd2VkS2V5cy5hZGQoJ3Blcm1hbmVudCcpO1xuICAgICAgICBhbGxvd2VkS2V5cy5hZGQoJ2Rlc3RpbmF0aW9uJyk7XG4gICAgfVxuICAgIGlmICh0eXBlID09PSAnaGVhZGVyJykge1xuICAgICAgICBhbGxvd2VkS2V5cy5hZGQoJ2hlYWRlcnMnKTtcbiAgICB9XG4gICAgZm9yIChjb25zdCByb3V0ZSBvZiByb3V0ZXMpe1xuICAgICAgICBpZiAoIXJvdXRlIHx8IHR5cGVvZiByb3V0ZSAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYFRoZSByb3V0ZSAke0pTT04uc3RyaW5naWZ5KHJvdXRlKX0gaXMgbm90IGEgdmFsaWQgb2JqZWN0IHdpdGggXFxgc291cmNlXFxgIGFuZCBcXGAke3R5cGUgPT09ICdoZWFkZXInID8gJ2hlYWRlcnMnIDogJ2Rlc3RpbmF0aW9uJ31cXGBgKTtcbiAgICAgICAgICAgIG51bUludmFsaWRSb3V0ZXMrKztcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlID09PSAncmV3cml0ZScgJiYgcm91dGUuYmFzZVBhdGggPT09IGZhbHNlICYmICEocm91dGUuZGVzdGluYXRpb24uc3RhcnRzV2l0aCgnaHR0cDovLycpIHx8IHJvdXRlLmRlc3RpbmF0aW9uLnN0YXJ0c1dpdGgoJ2h0dHBzOi8vJykpKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGBUaGUgcm91dGUgJHtyb3V0ZS5zb3VyY2V9IHJld3JpdGVzIHVybHMgb3V0c2lkZSBvZiB0aGUgYmFzZVBhdGguIFBsZWFzZSB1c2UgYSBkZXN0aW5hdGlvbiB0aGF0IHN0YXJ0cyB3aXRoIFxcYGh0dHA6Ly9cXGAgb3IgXFxgaHR0cHM6Ly9cXGAgaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvaW52YWxpZC1leHRlcm5hbC1yZXdyaXRlYCk7XG4gICAgICAgICAgICBudW1JbnZhbGlkUm91dGVzKys7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXMocm91dGUpO1xuICAgICAgICBjb25zdCBpbnZhbGlkS2V5cyA9IGtleXMuZmlsdGVyKChrZXkpPT4hYWxsb3dlZEtleXMuaGFzKGtleSlcbiAgICAgICAgKTtcbiAgICAgICAgY29uc3QgaW52YWxpZFBhcnRzID0gW107XG4gICAgICAgIGlmICh0eXBlb2Ygcm91dGUuYmFzZVBhdGggIT09ICd1bmRlZmluZWQnICYmIHJvdXRlLmJhc2VQYXRoICE9PSBmYWxzZSkge1xuICAgICAgICAgICAgaW52YWxpZFBhcnRzLnB1c2goJ2BiYXNlUGF0aGAgbXVzdCBiZSB1bmRlZmluZWQgb3IgZmFsc2UnKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIHJvdXRlLmxvY2FsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgcm91dGUubG9jYWxlICE9PSBmYWxzZSkge1xuICAgICAgICAgICAgaW52YWxpZFBhcnRzLnB1c2goJ2Bsb2NhbGVgIG11c3QgYmUgdW5kZWZpbmVkIG9yIGZhbHNlJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiByb3V0ZS5oYXMgIT09ICd1bmRlZmluZWQnICYmICFBcnJheS5pc0FycmF5KHJvdXRlLmhhcykpIHtcbiAgICAgICAgICAgIGludmFsaWRQYXJ0cy5wdXNoKCdgaGFzYCBtdXN0IGJlIHVuZGVmaW5lZCBvciB2YWxpZCBoYXMgb2JqZWN0Jyk7XG4gICAgICAgICAgICBoYWRJbnZhbGlkSGFzID0gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIGlmIChyb3V0ZS5oYXMpIHtcbiAgICAgICAgICAgIGNvbnN0IGludmFsaWRIYXNJdGVtcyA9IFtdO1xuICAgICAgICAgICAgZm9yIChjb25zdCBoYXNJdGVtIG9mIHJvdXRlLmhhcyl7XG4gICAgICAgICAgICAgICAgbGV0IGludmFsaWRIYXNQYXJ0cyA9IFtdO1xuICAgICAgICAgICAgICAgIGlmICghYWxsb3dlZEhhc1R5cGVzLmhhcyhoYXNJdGVtLnR5cGUpKSB7XG4gICAgICAgICAgICAgICAgICAgIGludmFsaWRIYXNQYXJ0cy5wdXNoKGBpbnZhbGlkIHR5cGUgXCIke2hhc0l0ZW0udHlwZX1cImApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGhhc0l0ZW0ua2V5ICE9PSAnc3RyaW5nJyAmJiBoYXNJdGVtLnR5cGUgIT09ICdob3N0Jykge1xuICAgICAgICAgICAgICAgICAgICBpbnZhbGlkSGFzUGFydHMucHVzaChgaW52YWxpZCBrZXkgXCIke2hhc0l0ZW0ua2V5fVwiYCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgaGFzSXRlbS52YWx1ZSAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIGhhc0l0ZW0udmFsdWUgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgICAgIGludmFsaWRIYXNQYXJ0cy5wdXNoKGBpbnZhbGlkIHZhbHVlIFwiJHtoYXNJdGVtLnZhbHVlfVwiYCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgaGFzSXRlbS52YWx1ZSA9PT0gJ3VuZGVmaW5lZCcgJiYgaGFzSXRlbS50eXBlID09PSAnaG9zdCcpIHtcbiAgICAgICAgICAgICAgICAgICAgaW52YWxpZEhhc1BhcnRzLnB1c2goYHZhbHVlIGlzIHJlcXVpcmVkIGZvciBcImhvc3RcIiB0eXBlYCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChpbnZhbGlkSGFzUGFydHMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICBpbnZhbGlkSGFzSXRlbXMucHVzaChgJHtpbnZhbGlkSGFzUGFydHMuam9pbignLCAnKX0gZm9yICR7SlNPTi5zdHJpbmdpZnkoaGFzSXRlbSl9YCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGludmFsaWRIYXNJdGVtcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgaGFkSW52YWxpZEhhcyA9IHRydWU7XG4gICAgICAgICAgICAgICAgY29uc3QgaXRlbVN0ciA9IGBpdGVtJHtpbnZhbGlkSGFzSXRlbXMubGVuZ3RoID09PSAxID8gJycgOiAncyd9YDtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGBJbnZhbGlkIFxcYGhhc1xcYCAke2l0ZW1TdHJ9OlxcbmAgKyBpbnZhbGlkSGFzSXRlbXMuam9pbignXFxuJykpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoKTtcbiAgICAgICAgICAgICAgICBpbnZhbGlkUGFydHMucHVzaChgaW52YWxpZCBcXGBoYXNcXGAgJHtpdGVtU3RyfSBmb3VuZGApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICghcm91dGUuc291cmNlKSB7XG4gICAgICAgICAgICBpbnZhbGlkUGFydHMucHVzaCgnYHNvdXJjZWAgaXMgbWlzc2luZycpO1xuICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiByb3V0ZS5zb3VyY2UgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICBpbnZhbGlkUGFydHMucHVzaCgnYHNvdXJjZWAgaXMgbm90IGEgc3RyaW5nJyk7XG4gICAgICAgIH0gZWxzZSBpZiAoIXJvdXRlLnNvdXJjZS5zdGFydHNXaXRoKCcvJykpIHtcbiAgICAgICAgICAgIGludmFsaWRQYXJ0cy5wdXNoKCdgc291cmNlYCBkb2VzIG5vdCBzdGFydCB3aXRoIC8nKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZSA9PT0gJ2hlYWRlcicpIHtcbiAgICAgICAgICAgIGludmFsaWRQYXJ0cy5wdXNoKC4uLmNoZWNrSGVhZGVyKHJvdXRlKSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBsZXQgX3JvdXRlID0gcm91dGU7XG4gICAgICAgICAgICBpZiAoIV9yb3V0ZS5kZXN0aW5hdGlvbikge1xuICAgICAgICAgICAgICAgIGludmFsaWRQYXJ0cy5wdXNoKCdgZGVzdGluYXRpb25gIGlzIG1pc3NpbmcnKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIF9yb3V0ZS5kZXN0aW5hdGlvbiAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICBpbnZhbGlkUGFydHMucHVzaCgnYGRlc3RpbmF0aW9uYCBpcyBub3QgYSBzdHJpbmcnKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJ3Jld3JpdGUnICYmICFfcm91dGUuZGVzdGluYXRpb24ubWF0Y2goL14oXFwvfGh0dHBzOlxcL1xcL3xodHRwOlxcL1xcLykvKSkge1xuICAgICAgICAgICAgICAgIGludmFsaWRQYXJ0cy5wdXNoKCdgZGVzdGluYXRpb25gIGRvZXMgbm90IHN0YXJ0IHdpdGggYC9gLCBgaHR0cDovL2AsIG9yIGBodHRwczovL2AnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZSA9PT0gJ3JlZGlyZWN0Jykge1xuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gY2hlY2tSZWRpcmVjdChyb3V0ZSk7XG4gICAgICAgICAgICBoYWRJbnZhbGlkU3RhdHVzID0gaGFkSW52YWxpZFN0YXR1cyB8fCByZXN1bHQuaGFkSW52YWxpZFN0YXR1cztcbiAgICAgICAgICAgIGludmFsaWRQYXJ0cy5wdXNoKC4uLnJlc3VsdC5pbnZhbGlkUGFydHMpO1xuICAgICAgICB9XG4gICAgICAgIGxldCBzb3VyY2VUb2tlbnM7XG4gICAgICAgIGlmICh0eXBlb2Ygcm91dGUuc291cmNlID09PSAnc3RyaW5nJyAmJiByb3V0ZS5zb3VyY2Uuc3RhcnRzV2l0aCgnLycpKSB7XG4gICAgICAgICAgICAvLyBvbmx5IHNob3cgcGFyc2UgZXJyb3IgaWYgd2UgZGlkbid0IGFscmVhZHkgc2hvdyBlcnJvclxuICAgICAgICAgICAgLy8gZm9yIG5vdCBiZWluZyBhIHN0cmluZ1xuICAgICAgICAgICAgY29uc3QgeyB0b2tlbnMgLCBlcnJvciAsIHJlZ2V4U3RyICB9ID0gdHJ5UGFyc2VQYXRoKHJvdXRlLnNvdXJjZSk7XG4gICAgICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBpbnZhbGlkUGFydHMucHVzaCgnYHNvdXJjZWAgcGFyc2UgZmFpbGVkJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocmVnZXhTdHIgJiYgcmVnZXhTdHIubGVuZ3RoID4gNDA5Nikge1xuICAgICAgICAgICAgICAgIGludmFsaWRQYXJ0cy5wdXNoKCdgc291cmNlYCBleGNlZWRzIG1heCBidWlsdCBsZW5ndGggb2YgNDA5NicpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc291cmNlVG9rZW5zID0gdG9rZW5zO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGhhc1NlZ21lbnRzID0gbmV3IFNldCgpO1xuICAgICAgICBpZiAocm91dGUuaGFzKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGhhc0l0ZW0gb2Ygcm91dGUuaGFzKXtcbiAgICAgICAgICAgICAgICBpZiAoIWhhc0l0ZW0udmFsdWUgJiYgaGFzSXRlbS5rZXkpIHtcbiAgICAgICAgICAgICAgICAgICAgaGFzU2VnbWVudHMuYWRkKGhhc0l0ZW0ua2V5KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGhhc0l0ZW0udmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBtYXRjaCBvZiBoYXNJdGVtLnZhbHVlLm1hdGNoQWxsKG5hbWVkR3JvdXBzUmVnZXgpKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtYXRjaFsxXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhc1NlZ21lbnRzLmFkZChtYXRjaFsxXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKGhhc0l0ZW0udHlwZSA9PT0gJ2hvc3QnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBoYXNTZWdtZW50cy5hZGQoJ2hvc3QnKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyBtYWtlIHN1cmUgbm8gdW5uYW1lZCBwYXR0ZXJucyBhcmUgYXR0ZW1wdGVkIHRvIGJlIHVzZWQgaW4gdGhlXG4gICAgICAgIC8vIGRlc3RpbmF0aW9uIGFzIHRoaXMgY2FuIGNhdXNlIGNvbmZ1c2lvbiBhbmQgaXMgbm90IGFsbG93ZWRcbiAgICAgICAgaWYgKHR5cGVvZiByb3V0ZS5kZXN0aW5hdGlvbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIGlmIChyb3V0ZS5kZXN0aW5hdGlvbi5zdGFydHNXaXRoKCcvJykgJiYgQXJyYXkuaXNBcnJheShzb3VyY2VUb2tlbnMpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgdW5uYW1lZEluRGVzdCA9IG5ldyBTZXQoKTtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHRva2VuIG9mIHNvdXJjZVRva2Vucyl7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdG9rZW4gPT09ICdvYmplY3QnICYmIHR5cGVvZiB0b2tlbi5uYW1lID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdW5uYW1lZEluZGV4ID0gbmV3IFJlZ0V4cChgOiR7dG9rZW4ubmFtZX0oPyFcXFxcZClgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyb3V0ZS5kZXN0aW5hdGlvbi5tYXRjaCh1bm5hbWVkSW5kZXgpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdW5uYW1lZEluRGVzdC5hZGQoYDoke3Rva2VuLm5hbWV9YCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHVubmFtZWRJbkRlc3Quc2l6ZSA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgaW52YWxpZFBhcnRzLnB1c2goYFxcYGRlc3RpbmF0aW9uXFxgIGhhcyB1bm5hbWVkIHBhcmFtcyAke1tcbiAgICAgICAgICAgICAgICAgICAgICAgIC4uLnVubmFtZWRJbkRlc3RcbiAgICAgICAgICAgICAgICAgICAgXS5qb2luKCcsICcpfWApO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgdG9rZW5zOiBkZXN0VG9rZW5zICwgcmVnZXhTdHI6IGRlc3RSZWdleFN0ciAsIGVycm9yOiBkZXN0aW5hdGlvblBhcnNlRmFpbGVkICwgIH0gPSB0cnlQYXJzZVBhdGgocm91dGUuZGVzdGluYXRpb24sIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZGVzdFJlZ2V4U3RyICYmIGRlc3RSZWdleFN0ci5sZW5ndGggPiA0MDk2KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbnZhbGlkUGFydHMucHVzaCgnYGRlc3RpbmF0aW9uYCBleGNlZWRzIG1heCBidWlsdCBsZW5ndGggb2YgNDA5NicpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChkZXN0aW5hdGlvblBhcnNlRmFpbGVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbnZhbGlkUGFydHMucHVzaCgnYGRlc3RpbmF0aW9uYCBwYXJzZSBmYWlsZWQnKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNvdXJjZVNlZ21lbnRzID0gbmV3IFNldChzb3VyY2VUb2tlbnMubWFwKChpdGVtKT0+dHlwZW9mIGl0ZW0gPT09ICdvYmplY3QnICYmIGl0ZW0ubmFtZVxuICAgICAgICAgICAgICAgICAgICAgICAgKS5maWx0ZXIoQm9vbGVhbikpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaW52YWxpZERlc3RTZWdtZW50cyA9IG5ldyBTZXQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgdG9rZW4gb2YgZGVzdFRva2Vucyl7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ29iamVjdCcgJiYgIXNvdXJjZVNlZ21lbnRzLmhhcyh0b2tlbi5uYW1lKSAmJiAhaGFzU2VnbWVudHMuaGFzKHRva2VuLm5hbWUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGludmFsaWREZXN0U2VnbWVudHMuYWRkKHRva2VuLm5hbWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpbnZhbGlkRGVzdFNlZ21lbnRzLnNpemUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnZhbGlkUGFydHMucHVzaChgXFxgZGVzdGluYXRpb25cXGAgaGFzIHNlZ21lbnRzIG5vdCBpbiBcXGBzb3VyY2VcXGAgb3IgXFxgaGFzXFxgICgke1tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLi4uaW52YWxpZERlc3RTZWdtZW50cywgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXS5qb2luKCcsICcpfSlgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjb25zdCBoYXNJbnZhbGlkS2V5cyA9IGludmFsaWRLZXlzLmxlbmd0aCA+IDA7XG4gICAgICAgIGNvbnN0IGhhc0ludmFsaWRQYXJ0cyA9IGludmFsaWRQYXJ0cy5sZW5ndGggPiAwO1xuICAgICAgICBpZiAoaGFzSW52YWxpZEtleXMgfHwgaGFzSW52YWxpZFBhcnRzKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGAke2ludmFsaWRQYXJ0cy5qb2luKCcsICcpfSR7aW52YWxpZEtleXMubGVuZ3RoID8gKGhhc0ludmFsaWRQYXJ0cyA/ICcsJyA6ICcnKSArIGAgaW52YWxpZCBmaWVsZCR7aW52YWxpZEtleXMubGVuZ3RoID09PSAxID8gJycgOiAncyd9OiBgICsgaW52YWxpZEtleXMuam9pbignLCcpIDogJyd9IGZvciByb3V0ZSAke0pTT04uc3RyaW5naWZ5KHJvdXRlKX1gKTtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoKTtcbiAgICAgICAgICAgIG51bUludmFsaWRSb3V0ZXMrKztcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAobnVtSW52YWxpZFJvdXRlcyA+IDApIHtcbiAgICAgICAgaWYgKGhhZEludmFsaWRTdGF0dXMpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYFxcblZhbGlkIHJlZGlyZWN0IHN0YXR1c0NvZGUgdmFsdWVzIGFyZSAke1tcbiAgICAgICAgICAgICAgICAuLi5hbGxvd2VkU3RhdHVzQ29kZXNcbiAgICAgICAgICAgIF0uam9pbignLCAnKX1gKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaGFkSW52YWxpZEhhcykge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihgXFxuVmFsaWQgXFxgaGFzXFxgIG9iamVjdCBzaGFwZSBpcyAke0pTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgICAgICB0eXBlOiBbXG4gICAgICAgICAgICAgICAgICAgIC4uLmFsbG93ZWRIYXNUeXBlc1xuICAgICAgICAgICAgICAgIF0uam9pbignLCAnKSxcbiAgICAgICAgICAgICAgICBrZXk6ICd0aGUga2V5IHRvIGNoZWNrIGZvcicsXG4gICAgICAgICAgICAgICAgdmFsdWU6ICd1bmRlZmluZWQgb3IgYSB2YWx1ZSBzdHJpbmcgdG8gbWF0Y2ggYWdhaW5zdCdcbiAgICAgICAgICAgIH0sIG51bGwsIDIpfWApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoKTtcbiAgICAgICAgY29uc29sZS5lcnJvcihgRXJyb3I6IEludmFsaWQgJHt0eXBlfSR7bnVtSW52YWxpZFJvdXRlcyA9PT0gMSA/ICcnIDogJ3MnfSBmb3VuZGApO1xuICAgICAgICBwcm9jZXNzLmV4aXQoMSk7XG4gICAgfVxufVxuZnVuY3Rpb24gcHJvY2Vzc1JvdXRlcyhyb3V0ZXMsIGNvbmZpZywgdHlwZSkge1xuICAgIGNvbnN0IF9yb3V0ZXMgPSByb3V0ZXM7XG4gICAgY29uc3QgbmV3Um91dGVzID0gW107XG4gICAgY29uc3QgZGVmYXVsdExvY2FsZXMgPSBbXTtcbiAgICBpZiAoY29uZmlnLmkxOG4gJiYgdHlwZSA9PT0gJ3JlZGlyZWN0Jykge1xuICAgICAgICB2YXIgcmVmO1xuICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgKChyZWYgPSBjb25maWcuaTE4bikgPT09IG51bGwgfHwgcmVmID09PSB2b2lkIDAgPyB2b2lkIDAgOiByZWYuZG9tYWlucykgfHwgW10pe1xuICAgICAgICAgICAgZGVmYXVsdExvY2FsZXMucHVzaCh7XG4gICAgICAgICAgICAgICAgbG9jYWxlOiBpdGVtLmRlZmF1bHRMb2NhbGUsXG4gICAgICAgICAgICAgICAgYmFzZTogYGh0dHAke2l0ZW0uaHR0cCA/ICcnIDogJ3MnfTovLyR7aXRlbS5kb21haW59YFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZGVmYXVsdExvY2FsZXMucHVzaCh7XG4gICAgICAgICAgICBsb2NhbGU6IGNvbmZpZy5pMThuLmRlZmF1bHRMb2NhbGUsXG4gICAgICAgICAgICBiYXNlOiAnJ1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgZm9yIChjb25zdCByIG9mIF9yb3V0ZXMpe1xuICAgICAgICB2YXIgcmVmMTtcbiAgICAgICAgY29uc3Qgc3JjQmFzZVBhdGggPSBjb25maWcuYmFzZVBhdGggJiYgci5iYXNlUGF0aCAhPT0gZmFsc2UgPyBjb25maWcuYmFzZVBhdGggOiAnJztcbiAgICAgICAgY29uc3QgaXNFeHRlcm5hbCA9ICEoKHJlZjEgPSByLmRlc3RpbmF0aW9uKSA9PT0gbnVsbCB8fCByZWYxID09PSB2b2lkIDAgPyB2b2lkIDAgOiByZWYxLnN0YXJ0c1dpdGgoJy8nKSk7XG4gICAgICAgIGNvbnN0IGRlc3RCYXNlUGF0aCA9IHNyY0Jhc2VQYXRoICYmICFpc0V4dGVybmFsID8gc3JjQmFzZVBhdGggOiAnJztcbiAgICAgICAgaWYgKGNvbmZpZy5pMThuICYmIHIubG9jYWxlICE9PSBmYWxzZSkge1xuICAgICAgICAgICAgdmFyIHJlZjI7XG4gICAgICAgICAgICBpZiAoIWlzRXh0ZXJuYWwpIHtcbiAgICAgICAgICAgICAgICBkZWZhdWx0TG9jYWxlcy5mb3JFYWNoKChpdGVtKT0+e1xuICAgICAgICAgICAgICAgICAgICBsZXQgZGVzdGluYXRpb247XG4gICAgICAgICAgICAgICAgICAgIGlmIChyLmRlc3RpbmF0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkZXN0aW5hdGlvbiA9IGl0ZW0uYmFzZSA/IGAke2l0ZW0uYmFzZX0ke2Rlc3RCYXNlUGF0aH0ke3IuZGVzdGluYXRpb259YCA6IGAke2Rlc3RCYXNlUGF0aH0ke3IuZGVzdGluYXRpb259YDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBuZXdSb3V0ZXMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAuLi5yLFxuICAgICAgICAgICAgICAgICAgICAgICAgZGVzdGluYXRpb24sXG4gICAgICAgICAgICAgICAgICAgICAgICBzb3VyY2U6IGAke3NyY0Jhc2VQYXRofS8ke2l0ZW0ubG9jYWxlfSR7ci5zb3VyY2V9YFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHIuc291cmNlID0gYC86bmV4dEludGVybmFsTG9jYWxlKCR7Y29uZmlnLmkxOG4ubG9jYWxlcy5tYXAoKGxvY2FsZSk9PigwLCBfZXNjYXBlUmVnZXhwKS5lc2NhcGVTdHJpbmdSZWdleHAobG9jYWxlKVxuICAgICAgICAgICAgKS5qb2luKCd8Jyl9KSR7ci5zb3VyY2UgPT09ICcvJyAmJiAhY29uZmlnLnRyYWlsaW5nU2xhc2ggPyAnJyA6IHIuc291cmNlfWA7XG4gICAgICAgICAgICBpZiAoci5kZXN0aW5hdGlvbiAmJiAoKHJlZjIgPSByLmRlc3RpbmF0aW9uKSA9PT0gbnVsbCB8fCByZWYyID09PSB2b2lkIDAgPyB2b2lkIDAgOiByZWYyLnN0YXJ0c1dpdGgoJy8nKSkpIHtcbiAgICAgICAgICAgICAgICByLmRlc3RpbmF0aW9uID0gYC86bmV4dEludGVybmFsTG9jYWxlJHtyLmRlc3RpbmF0aW9uID09PSAnLycgJiYgIWNvbmZpZy50cmFpbGluZ1NsYXNoID8gJycgOiByLmRlc3RpbmF0aW9ufWA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgci5zb3VyY2UgPSBgJHtzcmNCYXNlUGF0aH0ke3Iuc291cmNlID09PSAnLycgJiYgc3JjQmFzZVBhdGggPyAnJyA6IHIuc291cmNlfWA7XG4gICAgICAgIGlmIChyLmRlc3RpbmF0aW9uKSB7XG4gICAgICAgICAgICByLmRlc3RpbmF0aW9uID0gYCR7ZGVzdEJhc2VQYXRofSR7ci5kZXN0aW5hdGlvbiA9PT0gJy8nICYmIGRlc3RCYXNlUGF0aCA/ICcnIDogci5kZXN0aW5hdGlvbn1gO1xuICAgICAgICB9XG4gICAgICAgIG5ld1JvdXRlcy5wdXNoKHIpO1xuICAgIH1cbiAgICByZXR1cm4gbmV3Um91dGVzO1xufVxuYXN5bmMgZnVuY3Rpb24gbG9hZFJlZGlyZWN0cyhjb25maWcpIHtcbiAgICBpZiAodHlwZW9mIGNvbmZpZy5yZWRpcmVjdHMgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIFtdO1xuICAgIH1cbiAgICBsZXQgcmVkaXJlY3RzID0gYXdhaXQgY29uZmlnLnJlZGlyZWN0cygpO1xuICAgIC8vIGNoZWNrIGJlZm9yZSB3ZSBwcm9jZXNzIHRoZSByb3V0ZXMgYW5kIGFmdGVyIHRvIGVuc3VyZVxuICAgIC8vIHRoZXkgYXJlIHN0aWxsIHZhbGlkXG4gICAgY2hlY2tDdXN0b21Sb3V0ZXMocmVkaXJlY3RzLCAncmVkaXJlY3QnKTtcbiAgICByZWRpcmVjdHMgPSBwcm9jZXNzUm91dGVzKHJlZGlyZWN0cywgY29uZmlnLCAncmVkaXJlY3QnKTtcbiAgICBjaGVja0N1c3RvbVJvdXRlcyhyZWRpcmVjdHMsICdyZWRpcmVjdCcpO1xuICAgIHJldHVybiByZWRpcmVjdHM7XG59XG5hc3luYyBmdW5jdGlvbiBsb2FkUmV3cml0ZXMoY29uZmlnKSB7XG4gICAgaWYgKHR5cGVvZiBjb25maWcucmV3cml0ZXMgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGJlZm9yZUZpbGVzOiBbXSxcbiAgICAgICAgICAgIGFmdGVyRmlsZXM6IFtdLFxuICAgICAgICAgICAgZmFsbGJhY2s6IFtdXG4gICAgICAgIH07XG4gICAgfVxuICAgIGNvbnN0IF9yZXdyaXRlcyA9IGF3YWl0IGNvbmZpZy5yZXdyaXRlcygpO1xuICAgIGxldCBiZWZvcmVGaWxlcyA9IFtdO1xuICAgIGxldCBhZnRlckZpbGVzID0gW107XG4gICAgbGV0IGZhbGxiYWNrID0gW107XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KF9yZXdyaXRlcykgJiYgdHlwZW9mIF9yZXdyaXRlcyA9PT0gJ29iamVjdCcgJiYgT2JqZWN0LmtleXMoX3Jld3JpdGVzKS5ldmVyeSgoa2V5KT0+a2V5ID09PSAnYmVmb3JlRmlsZXMnIHx8IGtleSA9PT0gJ2FmdGVyRmlsZXMnIHx8IGtleSA9PT0gJ2ZhbGxiYWNrJ1xuICAgICkpIHtcbiAgICAgICAgYmVmb3JlRmlsZXMgPSBfcmV3cml0ZXMuYmVmb3JlRmlsZXMgfHwgW107XG4gICAgICAgIGFmdGVyRmlsZXMgPSBfcmV3cml0ZXMuYWZ0ZXJGaWxlcyB8fCBbXTtcbiAgICAgICAgZmFsbGJhY2sgPSBfcmV3cml0ZXMuZmFsbGJhY2sgfHwgW107XG4gICAgfSBlbHNlIHtcbiAgICAgICAgYWZ0ZXJGaWxlcyA9IF9yZXdyaXRlcztcbiAgICB9XG4gICAgLy8gY2hlY2sgYmVmb3JlIHdlIHByb2Nlc3MgdGhlIHJvdXRlcyBhbmQgYWZ0ZXIgdG8gZW5zdXJlXG4gICAgLy8gdGhleSBhcmUgc3RpbGwgdmFsaWRcbiAgICBjaGVja0N1c3RvbVJvdXRlcyhiZWZvcmVGaWxlcywgJ3Jld3JpdGUnKTtcbiAgICBjaGVja0N1c3RvbVJvdXRlcyhhZnRlckZpbGVzLCAncmV3cml0ZScpO1xuICAgIGNoZWNrQ3VzdG9tUm91dGVzKGZhbGxiYWNrLCAncmV3cml0ZScpO1xuICAgIGJlZm9yZUZpbGVzID0gcHJvY2Vzc1JvdXRlcyhiZWZvcmVGaWxlcywgY29uZmlnLCAncmV3cml0ZScpO1xuICAgIGFmdGVyRmlsZXMgPSBwcm9jZXNzUm91dGVzKGFmdGVyRmlsZXMsIGNvbmZpZywgJ3Jld3JpdGUnKTtcbiAgICBmYWxsYmFjayA9IHByb2Nlc3NSb3V0ZXMoZmFsbGJhY2ssIGNvbmZpZywgJ3Jld3JpdGUnKTtcbiAgICBjaGVja0N1c3RvbVJvdXRlcyhiZWZvcmVGaWxlcywgJ3Jld3JpdGUnKTtcbiAgICBjaGVja0N1c3RvbVJvdXRlcyhhZnRlckZpbGVzLCAncmV3cml0ZScpO1xuICAgIGNoZWNrQ3VzdG9tUm91dGVzKGZhbGxiYWNrLCAncmV3cml0ZScpO1xuICAgIHJldHVybiB7XG4gICAgICAgIGJlZm9yZUZpbGVzLFxuICAgICAgICBhZnRlckZpbGVzLFxuICAgICAgICBmYWxsYmFja1xuICAgIH07XG59XG5hc3luYyBmdW5jdGlvbiBsb2FkSGVhZGVycyhjb25maWcpIHtcbiAgICBpZiAodHlwZW9mIGNvbmZpZy5oZWFkZXJzICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICB9XG4gICAgbGV0IGhlYWRlcnMgPSBhd2FpdCBjb25maWcuaGVhZGVycygpO1xuICAgIC8vIGNoZWNrIGJlZm9yZSB3ZSBwcm9jZXNzIHRoZSByb3V0ZXMgYW5kIGFmdGVyIHRvIGVuc3VyZVxuICAgIC8vIHRoZXkgYXJlIHN0aWxsIHZhbGlkXG4gICAgY2hlY2tDdXN0b21Sb3V0ZXMoaGVhZGVycywgJ2hlYWRlcicpO1xuICAgIGhlYWRlcnMgPSBwcm9jZXNzUm91dGVzKGhlYWRlcnMsIGNvbmZpZywgJ2hlYWRlcicpO1xuICAgIGNoZWNrQ3VzdG9tUm91dGVzKGhlYWRlcnMsICdoZWFkZXInKTtcbiAgICByZXR1cm4gaGVhZGVycztcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9hZC1jdXN0b20tcm91dGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/lib/load-custom-routes.js\n");

/***/ }),

/***/ "./node_modules/next/dist/lib/web/chalk.js":
/*!*************************************************!*\
  !*** ./node_modules/next/dist/lib/web/chalk.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = void 0;\n// In the web runtime, we create an alternative object that just outputs the\n// message to the console without any styling. The same APIs are supported\n// for compatibility:\n// - chalk.red('error')\n// - chalk.bold.cyan('message')\n// - chalk.hex('#fff').underline('hello')\nconst chalk = new Proxy((s)=>s\n, {\n    get (_, prop) {\n        if ([\n            'hex',\n            'rgb',\n            'ansi256',\n            'bgHex',\n            'bgRgb',\n            'bgAnsi256'\n        ].includes(prop)) {\n            return ()=>chalk\n            ;\n        }\n        return chalk;\n    }\n});\nvar _default = chalk;\nexports[\"default\"] = _default;\n\n//# sourceMappingURL=chalk.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2xpYi93ZWIvY2hhbGsuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0Esa0JBQWU7O0FBRWYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9saWIvd2ViL2NoYWxrLmpzPzkyZTQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG4vLyBJbiB0aGUgd2ViIHJ1bnRpbWUsIHdlIGNyZWF0ZSBhbiBhbHRlcm5hdGl2ZSBvYmplY3QgdGhhdCBqdXN0IG91dHB1dHMgdGhlXG4vLyBtZXNzYWdlIHRvIHRoZSBjb25zb2xlIHdpdGhvdXQgYW55IHN0eWxpbmcuIFRoZSBzYW1lIEFQSXMgYXJlIHN1cHBvcnRlZFxuLy8gZm9yIGNvbXBhdGliaWxpdHk6XG4vLyAtIGNoYWxrLnJlZCgnZXJyb3InKVxuLy8gLSBjaGFsay5ib2xkLmN5YW4oJ21lc3NhZ2UnKVxuLy8gLSBjaGFsay5oZXgoJyNmZmYnKS51bmRlcmxpbmUoJ2hlbGxvJylcbmNvbnN0IGNoYWxrID0gbmV3IFByb3h5KChzKT0+c1xuLCB7XG4gICAgZ2V0IChfLCBwcm9wKSB7XG4gICAgICAgIGlmIChbXG4gICAgICAgICAgICAnaGV4JyxcbiAgICAgICAgICAgICdyZ2InLFxuICAgICAgICAgICAgJ2Fuc2kyNTYnLFxuICAgICAgICAgICAgJ2JnSGV4JyxcbiAgICAgICAgICAgICdiZ1JnYicsXG4gICAgICAgICAgICAnYmdBbnNpMjU2J1xuICAgICAgICBdLmluY2x1ZGVzKHByb3ApKSB7XG4gICAgICAgICAgICByZXR1cm4gKCk9PmNoYWxrXG4gICAgICAgICAgICA7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNoYWxrO1xuICAgIH1cbn0pO1xudmFyIF9kZWZhdWx0ID0gY2hhbGs7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2hhbGsuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/lib/web/chalk.js\n");

/***/ })

});